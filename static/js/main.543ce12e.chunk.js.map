{"version":3,"sources":["assets/logo.png","components/header/Header.js","components/footer/Footer.js","components/form/Preview.js","components/PasteCode.js","About.js","StyleOptions.js","firebase.js","Login.js","components/form/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","to","activeStyle","display","Footer","href","Preview","state","linkedInHidden","twitterHidden","instagramHidden","githubHidden","blogHidden","otherHidden","color","backSplashChanges","this","props","previewInputs","setState","linkedIn","twitter","instagram","github","blog","other","firstName","lastName","subtitle","email","backgroundImage","backgroundSelected","font","previewStyle","bachgroundColor","style","Component","PasteCode","selectHTML","htmlText","select","document","execCommand","alert","selectCSS","cssText","formInputs","step","handleClickHTML","bind","handleClickCSS","fontTypeCSS","fontHTML","fontFinalCSS","fontLink","backSplash","tabIndex","id","rows","ref","readOnly","value","onClick","About","onSubmit","event","preventDefault","console","log","handleOnChange","a","inputName","target","name","val","globalState","action","htmlFor","type","onChange","placeholder","hidden","API_KEY","process","REACT_APP_UNSPLASH_API_KEY","StyleOptions","handleChangeColor","usersColor","background","bringImages","setTimeout","propPasser","handleChangeFont","handleImageClick","handleResetClick","getElementById","reset","styleInputs","query","page","axios","method","url","params","client_id","then","res","data","results","defaultChecked","map","image","key","urls","small","alt_description","backgroundColor","REACT_APP_FIREBASE_API_KEY","firebase","auth","GoogleAuthProvider","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","provider","Form","handleBackButton","window","location","pathname","handleNextButton","formParamInputs","param","Object","entries","styleParamInputs","user","exact","path","render","App","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,6QC+C5BC,MA3Cf,WACI,OACQ,gCACA,yBAAKC,UAAU,kBACX,yBAAKC,IAAKC,IAAMC,IAAI,0BACpB,iDAEJ,yBAAKH,UAAU,oBACX,4BACI,4BACI,yBAAKA,UAAU,kBACnB,kBAAC,IAAD,CAASI,GAAG,SACRC,YAAa,CACTC,QAAS,SAEb,iDAGJ,4BACA,kBAAC,IAAD,CAASF,GAAG,WACR,yBAAKJ,UAAU,kBACf,wCAGJ,4BACA,kBAAC,IAAD,CAASI,GAAG,YACR,yBAAKJ,UAAU,kBACf,wCAGJ,4BACA,kBAAC,IAAD,CAASI,GAAG,aACR,yBAAKJ,UAAU,kBACf,gDChBTO,MAlBf,WACI,OACI,gCACI,yBAAKP,UAAU,WACX,yBAAKA,UAAU,eACX,yBAAKC,IAAKC,IAAMC,IAAI,0BACpB,4BACI,4BAAI,uBAAGK,KAAK,WAAR,SACJ,4BAAI,uBAAGA,KAAK,aAAR,WACJ,4BAAI,uBAAGA,KAAK,aAAR,UACJ,4BAAI,uBAAGA,KAAK,4BAAR,a,gBC2JbC,G,wDArKb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,eAAgB,SAChBC,cAAe,SACfC,gBAAiB,SACjBC,aAAc,SACdC,WAAY,SACZC,YAAa,SACbC,MAAO,GACPC,kBAAmB,IAVT,E,gEAcR,IAAMD,EAAQE,KAAKC,MAAMC,cAAcJ,MACzB,oBAAVA,EACFE,KAAKG,SAAS,CACZL,MAAO,eACPC,kBAAmB,yBAEH,WAAVD,EAA+B,WAAVA,EAC3BE,KAAKG,SAAS,CACVL,MAAO,SACPC,kBAAmB,qBAEP,UAAVD,EACNE,KAAKG,SAAS,CACdL,MAAO,QACPC,kBAAmB,yBAEF,WAAVD,EAA+B,YAAVA,EAAgC,UAAVA,EAA8B,SAAVA,EACtEE,KAAKG,SAAS,CACdL,MAAO,UACPC,kBAAmB,yBAEF,QAAVD,EAA4B,SAAVA,GACzBE,KAAKG,SAAS,CACVL,MAAO,SACPC,kBAAmB,yBAQW,KAAtCC,KAAKC,MAAMC,cAAcE,UAC3BJ,KAAKG,SAAS,CACZX,eAAgB,KAGqB,KAArCQ,KAAKC,MAAMC,cAAcG,SAC3BL,KAAKG,SAAS,CACZV,cAAe,KAGwB,KAAvCO,KAAKC,MAAMC,cAAcI,WAC3BN,KAAKG,SAAS,CACZT,gBAAiB,KAGmB,KAApCM,KAAKC,MAAMC,cAAcK,QAC3BP,KAAKG,SAAS,CACZR,aAAc,KAGoB,KAAlCK,KAAKC,MAAMC,cAAcM,MAC3BR,KAAKG,SAAS,CACZP,WAAY,KAGuB,KAAnCI,KAAKC,MAAMC,cAAcO,OAC3BT,KAAKG,SAAS,CACZN,YAAa,O,+BAMjB,IAAMa,EAAYV,KAAKC,MAAMC,cAAcQ,UACrCC,EAAWX,KAAKC,MAAMC,cAAcS,SACpCC,EAAWZ,KAAKC,MAAMC,cAAcU,SACpCC,EAAQb,KAAKC,MAAMC,cAAcW,MACjCT,EAAWJ,KAAKC,MAAMC,cAAcE,SACpCC,EAAUL,KAAKC,MAAMC,cAAcG,QACnCC,EAAYN,KAAKC,MAAMC,cAAcI,UACrCC,EAASP,KAAKC,MAAMC,cAAcK,OAClCC,EAAOR,KAAKC,MAAMC,cAAcM,KAChCC,EAAQT,KAAKC,MAAMC,cAAcO,MACjCK,EAAkBd,KAAKC,MAAMC,cAAca,mBAC3CC,EAAOhB,KAAKC,MAAMC,cAAcc,KAEhCC,EAAe,CACnBH,gBAAgB,OAAD,OAASA,EAAT,KACfI,gBAAgB,GAAD,OAAKlB,KAAKT,MAAMO,OAC/BkB,KAAK,GAAD,OAAKA,IAGX,OACE,yBAAKnC,UAAU,kDACb,kDACA,yBAAKA,UAAU,0BAA0BsC,MAAOF,GAC9C,yBAAKpC,UAAWmB,KAAKT,MAAMQ,mBACzB,wBAAIlB,UAAWmB,KAAKT,MAAMO,OAA1B,aACaY,EADb,IACyBC,EADzB,KAGA,wBAAI9B,UAAWmB,KAAKT,MAAMO,OAA1B,+BACA,wBAAIjB,UAAWmB,KAAKT,MAAMO,OAAQc,GAClC,4BACE,wBAAI/B,UAAWmB,KAAKT,MAAME,eACxB,uBACEJ,KAAI,8BAAyBgB,GAC7BxB,UAAWmB,KAAKT,MAAMO,OAEtB,uBAAGjB,UAAU,qBAGjB,wBAAIA,UAAWmB,KAAKT,MAAMC,gBACxB,uBACEH,KAAI,sCAAiCe,GACrCvB,UAAWmB,KAAKT,MAAMO,OAEtB,uBAAGjB,UAAU,yBAGjB,wBAAIA,UAAWmB,KAAKT,MAAMG,iBACxB,uBACEL,KAAI,oCAA+BiB,GACnCzB,UAAWmB,KAAKT,MAAMO,OAEtB,uBAAGjB,UAAU,uBAGjB,wBAAIA,UAAWmB,KAAKT,MAAMI,cACxB,uBACEN,KAAI,6BAAwBkB,GAC5B1B,UAAWmB,KAAKT,MAAMO,OAEtB,uBAAGjB,UAAU,oBAGjB,wBAAIA,UAAWmB,KAAKT,MAAMK,YACxB,uBAAGP,KAAI,UAAKmB,GAAQ3B,UAAWmB,KAAKT,MAAMO,OACxC,uBAAGjB,UAAU,kBAGjB,wBAAIA,UAAWmB,KAAKT,MAAMM,aACxB,uBAAGR,KAAI,UAAKoB,GAAS5B,UAAWmB,KAAKT,MAAMO,OACzC,uBAAGjB,UAAU,+BAGjB,4BACE,uBAAGQ,KAAI,UAAKwB,GAAShC,UAAWmB,KAAKT,MAAMO,OACzC,uBAAGjB,UAAU,8B,GA1JTuC,c,QCoNPC,G,wDAhNX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IAyBVqB,WAAa,WACT,EAAKC,SAASC,SACdC,SAASC,YAAY,QACrBC,MAAM,gBA7BS,EAgCnBC,UAAY,WACR,EAAKC,QAAQL,SACbC,SAASC,YAAY,QACrBC,MAAM,eAjCN,EAAKpC,MAAQ,CACTwB,mBAAoBd,EAAM6B,WAAWf,mBACrCP,KAAMP,EAAM6B,WAAWtB,KACvBV,MAAOG,EAAM6B,WAAWhC,MACxBe,MAAOZ,EAAM6B,WAAWjB,MACxBH,UAAWT,EAAM6B,WAAWpB,UAC5BM,KAAMf,EAAM6B,WAAWd,KACvBL,SAAUV,EAAM6B,WAAWnB,SAC3BP,SAAUH,EAAM6B,WAAW1B,SAC3BG,OAAQN,EAAM6B,WAAWvB,OACzBE,MAAOR,EAAM6B,WAAWrB,MACxBsB,KAAM,QACNnB,SAAUX,EAAM6B,WAAWlB,SAC3BP,QAASJ,EAAM6B,WAAWzB,SAI9B,EAAKkB,SAAW,GAChB,EAAKS,gBAAkB,EAAKV,WAAWW,KAAhB,gBACvB,EAAKJ,QAAU,GACf,EAAKK,eAAiB,EAAKN,UAAUK,KAAf,gBAtBP,E,qDAsCT,IAAD,OAECE,EAAmC,aAApBnC,KAAKT,MAAMyB,KAAuB,QAAU,aAE3DoB,EAAgC,kBAApBpC,KAAKT,MAAMyB,KAA4B,gBAAkBhB,KAAKT,MAAMyB,KAEhFqB,EAAoC,KAApBrC,KAAKT,MAAMyB,KAAZ,yBAA6ChB,KAAKT,MAAMyB,KAAxD,cAAkEmB,EAAlE,QAEfG,EAAgC,KAApBtC,KAAKT,MAAMyB,KAAZ,+DAAmFoB,EAAnF,gGAGXtC,EAA6B,SAApBE,KAAKT,MAAMO,MAAZ,iBACRyC,EAAkC,UAApBvC,KAAKT,MAAMO,OAAyC,UAApBE,KAAKT,MAAMO,MAA5C,wDAGbM,EAAoC,KAAxBJ,KAAKT,MAAMa,SAAZ,mDAA2EJ,KAAKT,MAAMa,SAAtF,+GACXC,EAAkC,KAAvBL,KAAKT,MAAMc,QAAZ,2CAAkEL,KAAKT,MAAMc,QAA7E,0GACVC,EAAkC,KAArBN,KAAKT,MAAMkB,MAAZ,iDAAsET,KAAKT,MAAMkB,MAAjF,8GACZF,EAAgC,KAAtBP,KAAKT,MAAMgB,OAAZ,8CAAoEP,KAAKT,MAAMgB,OAA/E,gHACTM,EAA8B,KAArBb,KAAKT,MAAMsB,MAAZ,gCAAqDb,KAAKT,MAAMsB,MAAhE,iDACRL,EAA4B,KAApBR,KAAKT,MAAMiB,KAAZ,uBAA2CR,KAAKT,MAAMgB,OAAtD,kHAEPO,EAAqD,KAAlCd,KAAKT,MAAMwB,mBAAZ,gCAAkEf,KAAKT,MAAMwB,mBAA7E,2JAKlBH,EAAoC,KAAxBZ,KAAKT,MAAMqB,SAAZ,cAAsCZ,KAAKT,MAAMqB,SAAjD,2DAGjB,OACI,yBAAK/B,UAAU,oBACX,yBAAKA,UAAU,sBACX,wBAAI2D,SAAS,IAAI3D,UAAU,kBAA3B,gBAAyD,6DACzD,yBAAKA,UAAU,iBACX,wBAAI2D,SAAS,IAAIC,GAAG,WAAW5D,UAAU,iBAAzC,QACA,8BAAU6D,KAAK,IAAIC,IAAK,SAACpB,GAAD,OAAc,EAAKA,SAAWA,GAAUqB,UAAQ,EAACC,MAAK,2VAShGP,EATgG,0KAetEtC,KAAKT,MAAMmB,UAf2D,YAe9CV,KAAKT,MAAMoB,SAfmC,wFAiBpFC,EAjBoF,uDAmBhFR,EAnBgF,iCAoBhFC,EApBgF,iCAqBhFC,EArBgF,iCAsBhFC,EAtBgF,iCAuBhFM,EAvBgF,iCAwBhFL,EAxBgF,mGAiClF,yBAAK3B,UAAU,iBACX,wBAAI2D,SAAS,IAAI3D,UAAU,iBAA3B,OACA,8BAAU6D,KAAK,IAAIC,IAAK,SAACd,GAAD,OAAa,EAAKA,QAAUA,GAASe,UAAQ,EAACC,MAAK,mnGAU7FR,EAV6F,uBAWvFvC,EAXuF,kBAY3F,WACA,OAAQ,EAAKP,MAAMO,OACnB,IAAK,QAAS,MAAM,4CACpB,IAAK,kBAAmB,MAAM,gDAC9B,IAAK,SACL,IAAK,SAAU,MAAM,6CACrB,IAAK,MAAO,MAAM,8CAClB,IAAK,OAAQ,MAAM,6CACnB,IAAK,SACL,IAAK,UACL,IAAK,QACL,IAAK,OAAQ,MAAM,6CACnB,QAAS,MAAM,6CAZf,GAZ2F,kUA6C7FgB,EA7C6F,+DAgD3EyB,EAhD2E,0TA+D3F,WAAO,OAAQ,EAAKhD,MAAMO,OAC1B,IAAK,QAAS,MAAM,4CACpB,IAAK,kBAAmB,MAAM,gDAC9B,IAAK,SACL,IAAK,SAAU,MAAM,6CACrB,IAAK,MAAO,MAAM,8CAClB,IAAK,OAAQ,MAAM,6CACnB,IAAK,SACL,IAAK,UACL,IAAK,QACL,IAAK,OAAQ,MAAM,6CACnB,QAAS,MAAM,6CAXf,GA/D2F,qMA0FnF,yBAAKjB,UAAU,aACX,4BAAQiE,QAAS9C,KAAKgC,iBAAtB,aACA,4BAAQc,QAAS9C,KAAKkC,gBAAtB,kB,GA1MId,c,yBCqIT2B,G,wDArIX,aAAe,IAAD,8BACV,gBA6BJC,SAAW,SAACC,GAERA,EAAMC,iBACNC,QAAQC,IAAI,kBAGZ,EAAKjD,SAAS,CACVO,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPT,SAAU,GACVC,QAAS,GACTC,UAAW,GACXE,KAAM,GACNC,MAAO,MA7CD,EAmDd4C,eAnDc,uCAmDG,WAAMJ,GAAN,iBAAAK,EAAA,6DAGTC,EAAYN,EAAMO,OAAOC,KACzBC,EAAMT,EAAMO,OAAOX,MAJV,SAKP,EAAK1C,SAAL,eACDoD,EAAYG,IANJ,OAQb,EAAKzD,MAAM6B,WAAW,EAAKvC,OARd,2CAnDH,sDAEV,EAAKA,MAAQ,CACLmB,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPT,SAAU,GACVC,QAAS,GACTC,UAAW,GACXE,KAAM,GACNC,MAAO,IAXL,E,gEAiBVT,KAAKG,SAAS,CACVO,UAAWV,KAAKC,MAAM0D,YAAYjD,UAClCC,SAAUX,KAAKC,MAAM0D,YAAYhD,SACjCC,SAAUZ,KAAKC,MAAM0D,YAAY/C,SACjCC,MAAOb,KAAKC,MAAM0D,YAAY9C,MAC9BT,SAAUJ,KAAKC,MAAM0D,YAAYvD,SACjCC,QAASL,KAAKC,MAAM0D,YAAYtD,QAChCC,UAAWN,KAAKC,MAAM0D,YAAYrD,UAClCG,MAAOT,KAAKC,MAAM0D,YAAYlD,U,+BAsClC,OACI,yBAAK5B,UAAU,wCACX,8EACA,0BAAM+E,OAAO,GAAGZ,SAAUhD,KAAKgD,UAE3B,8BAAUnE,UAAU,iBAChB,yBAAKA,UAAU,gBACf,2BAAOgF,QAAQ,cAAf,gBACA,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMmB,UAAWqD,SAAU/D,KAAKqD,eAAgBI,KAAK,eAEpF,yBAAK5E,UAAU,eACf,2BAAOgF,QAAQ,aAAf,eACA,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMoB,SAAUoD,SAAU/D,KAAKqD,eAAgBI,KAAK,eAIvF,8BAAU5E,UAAU,YAChB,2BAAOgF,QAAQ,YAAf,cACA,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMqB,SAAUmD,SAAU/D,KAAKqD,eAAgBI,KAAK,cAGvF,8BAAU5E,UAAU,SAChB,2BAAOgF,QAAQ,SAAf,WACA,2BAAOC,KAAK,QAAQjB,MAAO7C,KAAKT,MAAMsB,MAAOkD,SAAU/D,KAAKqD,eAAgBI,KAAK,WAGrF,8BAAU5E,UAAU,eAChB,6BACA,2BAAOgF,QAAQ,YAAf,YACI,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMa,SAAU2D,SAAU/D,KAAKqD,eAAgBI,KAAK,WAAWO,YAAY,eAG9G,6BACA,2BAAOH,QAAQ,WAAf,YACI,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMc,QAAS0D,SAAU/D,KAAKqD,eAAgBI,KAAK,UAAUO,YAAY,eAG5G,6BACA,2BAAOH,QAAQ,UAAf,WACI,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMgB,OAAQwD,SAAU/D,KAAKqD,eAAgBI,KAAK,SAASO,YAAY,gBAI9G,8BAAUnF,UAAU,eAChB,6BACA,2BAAOgF,QAAQ,aAAf,cACI,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMe,UAAWyD,SAAU/D,KAAKqD,eAAgBI,KAAK,YAAYO,YAAY,eAEhH,6BACI,2BAAOH,QAAQ,QAAf,SACA,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMiB,KAAMuD,SAAU/D,KAAKqD,eAAgBI,KAAK,OAAQO,YAAY,gCAGvG,6BACI,2BAAOH,QAAQ,SAAf,UACA,2BAAOC,KAAK,OAAOjB,MAAO7C,KAAKT,MAAMkB,MAAOsD,SAAU/D,KAAKqD,eAAgBI,KAAK,QAAQO,YAAY,iCAI5G,kDAGA,2BAAOF,KAAK,SAASG,QAAM,U,GA/H3B7C,c,iBCEd8C,G,MAAUC,+IAAYC,4BACfC,EAAb,kDACI,aAAe,IAAD,8BACV,gBAqDJC,kBAAoB,SAACrB,GACjBA,EAAMC,iBACN,IAAMqB,EAAatB,EAAMO,OAAOX,MAGhC,EAAK1C,SAAS,CACVL,MAAOyE,EACPC,WAAY,EAAKjF,MAAMiF,WACvBzD,mBAAoB,EAAKxB,MAAMwB,mBAC/BC,KAAM,EAAKzB,MAAMyB,OAIrB,EAAKyD,YAAYF,GAGjBG,YAAW,WACP,EAAKC,eACN,MAxEO,EA4EdC,iBAAmB,SAAC3B,GAChBA,EAAMC,iBAEN,EAAK/C,SAAS,CACVL,MAAO,EAAKP,MAAMO,MAClB0E,WAAY,EAAKjF,MAAMiF,WACvBzD,mBAAoB,EAAKxB,MAAMwB,mBAC/BC,KAAMiC,EAAMO,OAAOX,QAIvB6B,YAAW,WACP,EAAKC,eACN,MAzFO,EA4FdE,iBAAmB,SAAC5B,GAChBA,EAAMC,iBACN,EAAK/C,SAAS,CACVL,MAAO,EAAKP,MAAMO,MAClB0E,WAAY,EAAKjF,MAAMiF,WACvBzD,mBAAoBkC,EAAMO,OAAO1E,IACjCkC,KAAM,EAAKzB,MAAMwB,qBAIrB2D,YAAW,WACP,EAAKC,eACN,MAxGO,EA2GdG,iBAAmB,SAAC7B,GAChBA,EAAMC,iBAGNzB,SAASsD,eAAe,cAAcC,QAEtC,EAAK7E,SAAS,CACVL,MAAO,GACP0E,WAAY,GACZzD,mBAAoB,GACpBC,KAAM,MArHA,EA0Hd2D,WAAa,WACT,EAAK1E,MAAMgF,YAAY,EAAK1F,QAzH5B,EAAKA,MAAQ,CAETO,MAAO,GAEP0E,WAAY,GAEZzD,mBAAoB,GACpBC,KAAM,IAGV,EAAKsD,kBAAoB,EAAKA,kBAAkBrC,KAAvB,gBACzB,EAAK2C,iBAAmB,EAAKA,iBAAiB3C,KAAtB,gBACxB,EAAK4C,iBAAmB,EAAKA,iBAAiB5C,KAAtB,gBACxB,EAAK6C,iBAAmB,EAAKA,iBAAiB7C,KAAtB,gBAfd,EADlB,wDAmBgBiD,EAAOC,GAAO,IAAD,OACrBC,IAAM,CACFC,OAAQ,MACRC,IAAI,yCACJC,OAAQ,CACJC,UAAWtB,EACXgB,MAAO,0BACPpF,MAAM,GAAD,OAAKoF,MAEfO,MAAK,SAACC,GACLvC,QAAQC,IAAIsC,EAAIC,KAAKC,SACrB,EAAKzF,SAAS,CACVqE,WAAYkB,EAAIC,KAAKC,eA/BrC,+BAiIc,IAAD,OACL,OACI,yBAAKzE,MAAOA,EAAOtC,UAAU,mCACzB,6CAMA,0BAAM+E,OAAO,GAAGnB,GAAG,cACf,6BACI,2BAAOoB,QAAQ,SAAf,qBAEA,4BACIE,SAAU/D,KAAK4E,iBACfnB,KAAK,QACLhB,GAAG,IAEH,4BAAQoD,eAAe,UAAUhD,MAAM,UACvC,4BAAQA,MAAM,YAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,aAAd,iBACA,4BAAQA,MAAM,UAAd,YAGR,6BAEI,2BAAOgB,QAAQ,eAAf,sBAGA,4BACIE,SAAU/D,KAAKsE,kBACfb,KAAK,QACLhB,GAAG,SAEH,4BAAQI,MAAM,UAEd,4BAAQA,MAAM,mBAAd,mBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,UAIR,4BAAQhE,UAAU,QAAQiE,QAAS9C,KAAK8E,iBAAkBhB,KAAK,SAA/D,UAGJ,yBAAKjF,UAAU,YACX,gEACA,yBAAKA,UAAU,cACVmB,KAAKT,MAAMiF,WAAWsB,KAAI,SAACC,GACxB,OAEI,yBAAKlH,UAAU,kBACX,yBACIiE,QAAS,EAAK+B,iBACdmB,IAAG,UAAKD,EAAMtD,IACdA,GAAE,UAAKsD,EAAMtD,IAEb3D,IAAG,UAAKiH,EAAME,KAAKC,OACnBlH,IAAG,UAAK+G,EAAMI,8BArMtD,GAAkC/E,aAkN5BD,EAAQ,CACZiF,gBAAiB,WAGJ/B,I,qCCxNCF,+IAAYkC,2BAIX,IAAIC,IAASC,KAAKC,mBAgCnCF,IAASG,cAjBc,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAYSV,IAASC,OACJD,IAASW,YAD3B,IA0CQX,IAAf,ECzEMY,EAAW,IAAIZ,EAASC,KAAKC,mBAC7BD,EAAOD,EAASC,O,GAGFnF,Y,OCkKL+F,E,kDArKb,aAAe,IAAD,8BACZ,gBA0BFC,iBAAmB,WAIjB,IAAIjC,EAAOkC,OAAOC,SAASC,SAE3BpE,QAAQC,IAAIiE,OAAOC,UAKnB,MAAa,WAATnC,EACc,YACE,YAATA,EACO,SACE,aAATA,EACO,UACE,cAATA,EACO,WACE,UAATA,EACO,WAEA,aAjDN,EAsDdqC,iBAAmB,WAIjB,IAAIrC,EAAOkC,OAAOC,SAASC,SAM3B,MAAa,WAATpC,EACc,UACE,YAATA,EACO,WACE,aAATA,EACO,YACE,cAATA,EACO,SAEA,UAzEN,EAmFdsC,gBAAkB,SAACC,GACjBvE,QAAQC,IAAIsE,GACZ,cAAyBC,OAAOC,QAAQF,GAAxC,eAAgD,CAAC,IAAD,sBAAtC1B,EAAsC,KAAjCnD,EAAiC,KAC9C,EAAK1C,SAAL,eACG6F,EAAMnD,MAvFC,EA6FdgF,iBAAmB,SAACH,GAClBvE,QAAQC,IAAIsE,GACZ,cAAyBC,OAAOC,QAAQF,GAAxC,eAAgD,CAAC,IAAD,sBAAtC1B,EAAsC,KAAjCnD,EAAiC,KAC9C,EAAK1C,SAAL,eACG6F,EAAMnD,MA9FX,EAAKtD,MAAQ,CAEXmB,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPT,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,OAAQ,GACRC,KAAM,GACNC,MAAO,GAEPX,MAAO,GACP0E,WAAY,GACZzD,mBAAoB,GAEpB+G,KAAM,KACN9G,KAAM,IArBI,E,qDAuGJ,IAAD,OAEP,OACE,yBAAKnC,UAAU,iBAOX,kBAAC,IAAD,CACEkJ,OAAK,EACLC,KAAK,eACLC,OAAQ,SAAChI,GAAD,OACN,kBAAC,EAAD,eAAO6B,WAAY,EAAK2F,iBAAqBxH,OAIjD,kBAAC,IAAD,CACE8H,OAAK,EACLC,KAAK,SACLC,OAAQ,SAAChI,GAAD,OACN,kBAAC,EAAD,eACE6B,WAAY,EAAK2F,gBACjB9D,YAAa,EAAKpE,OACdU,OAKV,kBAAC,IAAD,CACE+H,KAAK,UACLC,OAAQ,SAAChI,GAAD,OACN,kBAAC,EAAD,eAAcgF,YAAa,EAAK4C,kBAAsB5H,OAI1D,kBAAC,IAAD,CACE+H,KAAK,WACLC,OAAQ,SAAChI,GAAD,OACN,kBAAC,EAAD,eAASC,cAAe,EAAKX,OAAWU,OAI5C,kBAAC,IAAD,CACE+H,KAAK,YACLC,OAAQ,SAAChI,GAAD,OAAW,kBAAC,EAAD,eAAW6B,WAAY,EAAKvC,OAAWU,OAG5D,yBAAKpB,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,cAAcI,GAAIe,KAAKoH,kBAAvC,QAGA,kBAAC,IAAD,CAAMvI,UAAU,SAASI,GAAIe,KAAKwH,kBAAlC,c,GA9JOpG,aCuBJ8G,G,wDAtBb,aAAe,IAAD,8BACZ,gBACK3I,MAAQ,GAFD,E,qDAOZ,OACE,kBAAC,IAAD,KACA,yBAAKV,UAAU,uBACb,yBAAKA,UAAU,YACf,kBAAC,EAAD,MAEA,kBAAC,EAAD,OAEA,kBAAC,EAAD,Y,GAjBUuC,cCGE+G,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASC,MACvB,2DCbNC,IAASL,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEF9G,SAASsD,eAAe,SD0HpB,kBAAmByD,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3F,QAAQ2F,MAAMA,EAAMC,c","file":"static/js/main.543ce12e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ad25eba7.png\";","import React from 'react';\nimport logo from '../../assets/logo.png'\nimport { BrowserRouter as NavLink } from \"react-router-dom\";\n\nfunction Header() {\n    return (\n            <header>\n            <div className=\"titleContainer\">\n                <img src={logo} alt=\"Future Developer logo\" />\n                <h1>Future Developer</h1>\n            </div>\n            <div className=\"sectionContainer\">\n                <ul>\n                    <li>\n                        <div className=\"sectionBubble\"></div>\n                    <NavLink to=\"/about\"\n                        activeStyle={{\n                            display: \"none\"\n                        }}>\n                        <p>Your Information</p>\n                    </NavLink>\n                    </li>\n                    <li>\n                    <NavLink to=\"/styles\">\n                        <div className=\"sectionBubble\"></div>\n                        <p>Options</p>\n                    </NavLink>\n                    </li>\n                    <li>\n                    <NavLink to=\"/preview\">\n                        <div className=\"sectionBubble\"></div>\n                        <p>Preview</p>\n                    </NavLink>\n                    </li>\n                    <li>\n                    <NavLink to=\"/codeCopy\">\n                        <div className=\"sectionBubble\"></div>\n                        <p>Save/Submit</p>\n                    </NavLink>\n                    </li>\n                </ul> \n\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport logo from '../../assets/logo.png'\n\nfunction Footer() {\n    return (\n        <footer>\n            <div className=\"wrapper\">\n                <div className=\"footerLinks\">\n                    <img src={logo} alt=\"Future Developer logo\" />\n                    <ul>\n                        <li><a href=\"mmm.com\">ANNA</a></li>\n                        <li><a href=\"https.com\">EDWARD</a></li>\n                        <li><a href=\"lslsl.com\">MARIE</a></li>\n                        <li><a href=\"http://maximilianlau.com\">MAX</a></li>\n                    </ul>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport \"./Preview.css\";\nclass Preview extends Component {\n  constructor() {\n    super();\n    this.state = {\n      linkedInHidden: \"hidden\",\n      twitterHidden: \"hidden\",\n      instagramHidden: \"hidden\",\n      githubHidden: \"hidden\",\n      blogHidden: \"hidden\",\n      otherHidden: \"hidden\",\n      color: \"\",\n      backSplashChanges: \"\",\n    };\n  }\n  componentDidMount() {\n        const color = this.props.previewInputs.color\n        if (color === \"black_and_white\") {\n          this.setState({\n            color: \"highContrast\",\n            backSplashChanges: \"decorativeBackSplash\",\n          });\n        }else if( color === \"yellow\" | color === \"orange\"){\n            this.setState({\n                color: \"golden\",\n                backSplashChanges: \"goldenBackSplash\"\n            })\n        }else if (color === \"white\") {\n            this.setState({\n            color: \"light\",\n            backSplashChanges: \"decorativeBackSplash\",\n            });\n        } else if( color === \"purple\" | color === \"magenta\" | color === \"green\" | color === \"teal\" ) {\n            this.setState({\n            color: \"mermaid\",\n            backSplashChanges: \"decorativeBackSplash\",\n            });\n        } else if (color === \"red\" | color === \"blue\"){\n            this.setState({\n                color: \"golden\",\n                backSplashChanges: \"decorativeBackSplash\"\n            })\n        } \n        \n\n    // look at props\n    // if email, linkedin, twitter, instagram, blog or other are empty\n    // hide icon from preview\n    if (this.props.previewInputs.linkedIn !== \"\") {\n      this.setState({\n        linkedInHidden: \"\",\n      });\n    }\n    if (this.props.previewInputs.twitter !== \"\") {\n      this.setState({\n        twitterHidden: \"\",\n      });\n    }\n    if (this.props.previewInputs.instagram !== \"\") {\n      this.setState({\n        instagramHidden: \"\",\n      });\n    }\n    if (this.props.previewInputs.github !== \"\") {\n      this.setState({\n        githubHidden: \"\",\n      });\n    }\n    if (this.props.previewInputs.blog !== \"\") {\n      this.setState({\n        blogHidden: \"\",\n      });\n    }\n    if (this.props.previewInputs.other !== \"\") {\n      this.setState({\n        otherHidden: \"\",\n      });\n    }\n  }\n\n  render() {\n    const firstName = this.props.previewInputs.firstName;\n    const lastName = this.props.previewInputs.lastName;\n    const subtitle = this.props.previewInputs.subtitle;\n    const email = this.props.previewInputs.email;\n    const linkedIn = this.props.previewInputs.linkedIn;\n    const twitter = this.props.previewInputs.twitter;\n    const instagram = this.props.previewInputs.instagram;\n    const github = this.props.previewInputs.github;\n    const blog = this.props.previewInputs.blog;\n    const other = this.props.previewInputs.other;\n    const backgroundImage = this.props.previewInputs.backgroundSelected;\n    const font = this.props.previewInputs.font;\n\n    const previewStyle = {\n      backgroundImage: `url(${backgroundImage})`,\n      bachgroundColor: `${this.state.color}`,\n      font: `${font}`\n    };\n\n    return (\n      <div className=\"previewSitePage innerFormContainer formWrapper\">\n        <h1>What do you think?</h1>\n        <div className=\"wrapper previewViewPort\" style={previewStyle}>\n          <div className={this.state.backSplashChanges}>\n            <h2 className={this.state.color}>\n              Hello I'm {firstName} {lastName}!\n            </h2>\n            <h3 className={this.state.color}>My website is comming soon!</h3>\n            <h4 className={this.state.color}>{subtitle}</h4>\n            <ul>\n              <li className={this.state.twitterHidden}>\n                <a\n                  href={`https://twitter.com/${twitter}`}\n                  className={this.state.color}\n                >\n                  <i className=\"fab fa-twitter\"></i>\n                </a>\n              </li>\n              <li className={this.state.linkedInHidden}>\n                <a\n                  href={`https://www.linkedin.com/in/${linkedIn}`}\n                  className={this.state.color}\n                >\n                  <i className=\"fab fa-linkedin-in\"></i>\n                </a>\n              </li>\n              <li className={this.state.instagramHidden}>\n                <a\n                  href={`https://www.instagram.com/${instagram}`}\n                  className={this.state.color}\n                >\n                  <i className=\"fab fa-instagram\"></i>\n                </a>\n              </li>\n              <li className={this.state.githubHidden}>\n                <a\n                  href={`https://github.com/${github}`}\n                  className={this.state.color}\n                >\n                  <i className=\"fab fa-github\"></i>\n                </a>\n              </li>\n              <li className={this.state.blogHidden}>\n                <a href={`${blog}`} className={this.state.color}>\n                  <i className=\"fas fa-blog\"></i>\n                </a>\n              </li>\n              <li className={this.state.otherHidden}>\n                <a href={`${other}`} className={this.state.color}>\n                  <i className=\"fas fa-external-link-alt\"></i>\n                </a>\n              </li>\n              <li>\n                <a href={`${email}`} className={this.state.color}>\n                  <i className=\"far fa-envelope\"></i>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Preview","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './PasteCode.css';\n\n\nclass PasteCode extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            backgroundSelected: props.formInputs.backgroundSelected,\n            blog: props.formInputs.blog,\n            color: props.formInputs.color,\n            email: props.formInputs.email,\n            firstName: props.formInputs.firstName,\n            font: props.formInputs.font,\n            lastName: props.formInputs.lastName,\n            linkedIn: props.formInputs.linkedIn,\n            github: props.formInputs.github,\n            other: props.formInputs.other,\n            step: \"about\",\n            subtitle: props.formInputs.subtitle,\n            twitter: props.formInputs.twitter\n        }\n\n        // Handles Click buttons on the bottom to refer to the right element\n        this.htmlText = {};\n        this.handleClickHTML = this.selectHTML.bind(this);\n        this.cssText = {};\n        this.handleClickCSS = this.selectCSS.bind(this);\n    }\n\n    // selects the value within textarea for HTML\n    selectHTML = () => {\n        this.htmlText.select();\n        document.execCommand('copy');\n        alert(\"HTML Copied\")\n    }\n    // selects the value within textarea for CSS\n    selectCSS = () => {\n        this.cssText.select();\n        document.execCommand('copy');\n        alert(\"CSS Copied\")\n    }\n\n    render() {\n        //   sans serif // serif change\n        const fontTypeCSS = (this.state.font === \"Alegreya\") ? \"serif\" : \"sans-serif\"\n        // Changing values for the Link tag in HTML  \n        const fontHTML = (this.state.font === 'Titillium Web') ? \"Titillium+Web\" : this.state.font\n        // adds the line for font change\n        const fontFinalCSS = (this.state.font !== '') ? `font-family : '${this.state.font}', ${fontTypeCSS};` : ``\n        // Font in html as a Link file\n        const fontLink = (this.state.font !== '') ? `<link href=\"https://fonts.googleapis.com/css2?family=${fontHTML}&display=swap\" rel=\"stylesheet\"> ` : `<!-- This is where you place custom font links -->`\n        \n        // Color Changing \n        const color = (this.state.color == 'white') ? `grey;` : `white;`  \n        const backSplash = (this.state.color == 'orange' || this.state.color == 'yellow') ? `rgba(223, 172, 17, 0.59);` : `rgba(255, 255, 255, 0.3);`\n        \n        // Append the twitter with personal link  or placeholder to the soon to be developer on where to place it\n        const linkedIn = (this.state.linkedIn !== '') ? ` <li><a href=https://www.linkedin.com/in/${this.state.linkedIn}><i class=\"fab fa-linkedin-in\"></i></a></li>` : `<!-- Enter your LinkedIn here when you do find it! -->`\n        const twitter = (this.state.twitter !== '') ? ` <li><a href=https://twitter.com/${this.state.twitter}><i class=\"fab fa-twitter\"></i></a></li>` : `<!-- Enter your twitter here when you do find it! -->`\n        const instagram = (this.state.other !== '') ? ` <li><a href=https://www.instagram.com/${this.state.other}><i class=\"fab fa-instagram\"></i></a></li>` : `<!-- Enter your instagram here when you do find it! -->`\n        const github = (this.state.github !== '') ? ` <li><a href=https://www.github.com/${this.state.github}><i class=\"fab fa-github\"></i></a></li>` : `<!-- Enter your github here so people can see your work! -->`\n        const email = (this.state.email !== '') ? ` <li><a href=\"mailto: ${this.state.email}\"><i class=\"far fa-envelope\"></i></a></li>` : ``\n        const blog = (this.state.blog !== '') ? ` <li><a href=${this.state.github}><i class=\"fab fa-blogger-b\"></i></a></li>` : `<!-- Enter your blog here so people can read your work! -->`\n\n        const backgroundImage = (this.state.backgroundSelected !== '') ? `background-image:url(\"${this.state.backgroundSelected}\");\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;`: `/* Background image css would have gone here */`\n\n        const subtitle = (this.state.subtitle !== '') ? `<h4>${this.state.subtitle}</h4>` : `<!-- where you can put a calling card -->`\n\n\n        return (\n            <div className=\"CopyPasteWrapper\">\n                <div className=\"CopyPasteContainer\">\n                    <h2 tabIndex=\"0\" className=\"CopyPasteTitle\">Ok, all set! <span>Feel free to copy the code</span></h2>\n                    <div className=\"CopyPasteEach\">\n                        <h4 tabIndex=\"0\" id=\"copyHTML\" className=\"CopyPasteType\">HTML</h4>\n                        <textarea rows=\"6\" ref={(htmlText) => this.htmlText = htmlText} readOnly value=\n                            {`<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Incoming New Developer!</title>\n    <script src=\"https://kit.fontawesome.com/c6324a7f25.js\" crossorigin=\"anonymous\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n    ${fontLink}\n</head>\n<body>\n    <header>\n        <div class=\"wrapper previewViewPort\">\n            <div class=\"decorativeBackSplash\">\n                <h1>Hello I'm ${this.state.firstName} ${this.state.lastName}!</h1>\n                <h3>My website is coming soon!</h3>\n                ${subtitle}\n                <ul>\n                    ${linkedIn}\n                    ${twitter}\n                    ${instagram}\n                    ${github}\n                    ${email}\n                    ${blog}\n                </ul>\n            </div>\n        </div>\n    </header>\n</body>\n</html>`}>\n                        </textarea>\n                    </div>\n                    <div className=\"CopyPasteEach\">\n                        <h4 tabIndex=\"0\" className=\"CopyPasteType\">CSS</h4>\n                        <textarea rows=\"6\" ref={(cssText) => this.cssText = cssText} readOnly value=\n                            {`a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}\n\n.clearfix:after {visibility: hidden; display: block; font-size: 0; content: ''; clear: both; height: 0; }\n\n* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }\n\n.visuallyHidden:not(:focus):not(:active) { position: absolute; width: 1px; height: 1px; margin: -1px;border: 0;padding: 0;white-space: nowrap;clip-path: inset(100%);clip: rect(00 0 0);overflow: hidden;}\n\n.html {\n    ${fontFinalCSS}\n    color:${color}\n     ${(() => {\n        switch (this.state.color) {\n        case \"white\": return `text-shadow: 1px 1px 0px rgb(44, 44, 44);`;\n        case \"black_and_white\": return `text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.24);`;\n        case \"yellow\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\n        case \"orange\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\n        case \"red\": return ` text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\n        case \"blue\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\n        case \"purple\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\n        case \"magenta\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\n        case \"green\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\n        case \"teal\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\n        default: return `text-shadow: 1px 1px 0px rgb(44, 44, 44);`;\n        }\n      })()}\n}\na {\n    color:white;\n}\na:hover {\n    color:slateblue;\n}\n.previewViewPort,\n.decorativeBackSplash {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n.previewViewPort {\n    padding: 30px;\n    background-color: plum;\n    height:100vh;\n    ${backgroundImage}\n}\n.decorativeBackSplash {\n    background-color: ${backSplash}\n    border: 5px double rgba(255, 255, 255, 0.2);\n    padding: 50px 100px;\n    height:40%;\n    text-align:center;\n}\n.previewViewPort ul {\n    display: flex;\n    font-size: 19px;\n}\n.previewViewPort li,\n.previewViewPort h1,\n.previewViewPort h3,\n.previewViewPort h4 {\n    margin: 10px;\n     ${(() => {switch (this.state.color) {\n        case \"white\": return `text-shadow: 1px 1px 0px rgb(44, 44, 44);`;\n        case \"black_and_white\": return `text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.24);`;\n        case \"yellow\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\n        case \"orange\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\n        case \"red\": return ` text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\n        case \"blue\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\n        case \"purple\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\n        case \"magenta\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\n        case \"green\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\n        case \"teal\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\n        default: return `text-shadow: 1px 1px 0px rgb(44, 44, 44);`;\n        }\n    })()}\n}\n.previewViewPort h1 {\n    font-size: calc(20px + .2vw);\n}\n.previewViewPort h3 {\n    font-size: calc(16.5px + .2vw );\n}\n.previewViewPort h4 {\n    font-size: calc(15px + .2vw )\n}`}>\n                        </textarea>\n                    </div>\n                </div>\n                <div className=\"bottomNav\">\n                    <button onClick={this.handleClickHTML}>Save HTML</button>\n                    <button onClick={this.handleClickCSS}>Save CSS</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PasteCode;","import React, { Component } from 'react';\nimport './About.css'\n\nclass About extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n                firstName: \"\",\n                lastName: \"\",\n                subtitle: \"\",\n                email: \"\",\n                linkedIn: \"\",\n                twitter: \"\",\n                instagram: \"\",\n                blog: \"\",\n                other: \"\",\n        }\n    }\n\n    //to display user input when he goes back to the previous component\n    componentDidMount(){\n        this.setState({\n            firstName: this.props.globalState.firstName,\n            lastName: this.props.globalState.lastName,\n            subtitle: this.props.globalState.subtitle,\n            email: this.props.globalState.email,\n            linkedIn: this.props.globalState.linkedIn,\n            twitter: this.props.globalState.twitter,\n            instagram: this.props.globalState.instagram,\n            other: this.props.globalState.other\n\n        })\n    }\n\n    onSubmit = (event) => {\n        //prevent default page refresh\n        event.preventDefault();\n        console.log(\"you submitted!\")\n        \n        //emptying states after submission and other code is done using them (so it doesn't sit in form boxes)\n        this.setState({\n            firstName: \"\",\n            lastName: \"\",\n            subtitle: \"\",\n            email: \"\",\n            linkedIn: \"\",\n            twitter: \"\",\n            instagram: \"\",\n            blog: \"\",\n            other: \"\",\n        })\n    }\n\n\n    //below is to test simplified data collection. By setting nam in an array we can take the val of any input. Saving that to a unique state is the part I so far can't figure out.\n    handleOnChange = async(event) => {\n        // console.log(event.target.value);\n        // setting the name and val to their own variables allows us to set them to their own states without having to write multiple setStates for each form input.\n        let inputName = event.target.name\n        let val = event.target.value\n        await this.setState({\n            [inputName]: val\n        })\n        this.props.formInputs(this.state)\n    }\n\n    render() {\n        return (\n            <div className=\"innerFormContainer formWrapper about\">\n                <h1>Hello! Please tell us a little about yourself.</h1>\n                <form action=\"\" onSubmit={this.onSubmit}>\n\n                    <fieldset className=\"firstLastName\">\n                        <div className=\"firstNameDiv\">\n                        <label htmlFor=\"firstName:\">First name*:</label>\n                        <input type=\"text\" value={this.state.firstName} onChange={this.handleOnChange} name=\"firstName\" />\n                        </div>\n                        <div className=\"lastNameDiv\">\n                        <label htmlFor=\"lastName:\">Last name*:</label>\n                        <input type=\"text\" value={this.state.lastName} onChange={this.handleOnChange} name=\"lastName\" />\n                        </div>\n                    </fieldset>\n\n                    <fieldset className=\"subtitle\">\n                        <label htmlFor=\"subtitle\">Subtitle*:</label>\n                        <input type=\"text\" value={this.state.subtitle} onChange={this.handleOnChange} name=\"subtitle\" />\n                    </fieldset>\n\n                    <fieldset className=\"email\">\n                        <label htmlFor=\"email\">Email*:</label>\n                        <input type=\"email\" value={this.state.email} onChange={this.handleOnChange} name=\"email\" />\n                    </fieldset>\n\n                    <fieldset className=\"socialMedia\">\n                        <div>\n                        <label htmlFor=\"linkedIn\">LinkedIn</label>\n                            <input type=\"text\" value={this.state.linkedIn} onChange={this.handleOnChange} name=\"linkedIn\" placeholder=\"@userName\"/>\n                        </div>\n\n                        <div>\n                        <label htmlFor=\"twitter\">Twitter:</label>\n                            <input type=\"text\" value={this.state.twitter} onChange={this.handleOnChange} name=\"twitter\" placeholder=\"@userName\"/>\n                        </div>\n\n                        <div>\n                        <label htmlFor=\"github\">GitHub:</label>\n                            <input type=\"text\" value={this.state.github} onChange={this.handleOnChange} name=\"github\" placeholder=\"@userName\"/>\n                        </div>\n\n                    </fieldset>\n                    <fieldset className=\"socialMedia\">\n                        <div>\n                        <label htmlFor=\"instagram\">Instagram:</label>\n                            <input type=\"text\" value={this.state.instagram} onChange={this.handleOnChange} name=\"instagram\" placeholder=\"@userName\" />\n                        </div>\n                        <div>\n                            <label htmlFor=\"blog\">Blog:</label>\n                            <input type=\"text\" value={this.state.blog} onChange={this.handleOnChange} name=\"blog\"  placeholder=\"https://fullwebsiteurl.com\"/>\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"other\">Other:</label>\n                            <input type=\"text\" value={this.state.other} onChange={this.handleOnChange} name=\"other\" placeholder=\"https://fullwebsiteurl.com\"/>\n                        </div>\n\n                    </fieldset>\n                    <span>*Required Fields</span>\n\n                    {/* Previous needs to go back, need to figure out how to override form submit */}\n                    <input type=\"submit\" hidden />\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./StyleOptions.css\";\n\n//hiding api hehehehe\nconst API_KEY = process.env.REACT_APP_UNSPLASH_API_KEY;\nexport class StyleOptions extends Component {\n    constructor() {\n        super()\n        this.state = {\n            // this is our user's color selection\n            color: '',\n            //don't pass this prop, just to store options for user to pick from\n            background: [],\n            // id of selected background goes here\n            backgroundSelected: '',\n            font: ''\n        };\n        //this is to make call b functions work\n        this.handleChangeColor = this.handleChangeColor.bind(this);\n        this.handleChangeFont = this.handleChangeFont.bind(this);\n        this.handleImageClick = this.handleImageClick.bind(this);\n        this.handleResetClick = this.handleResetClick.bind(this);\n    }\n    \n    bringImages(query, page) {\n        axios({\n            method: 'GET',\n            url: `https://api.unsplash.com/search/photos`,\n            params: {\n                client_id: API_KEY,\n                query: 'landing-page-background',\n                color: `${query}`\n            }\n        }).then((res) => {\n            console.log(res.data.results)\n            this.setState({\n                background: res.data.results\n            });\n        })\n    }\n\n        // bringImages(query, page) {\n//     axios({\n//       method: \"GET\",\n//       url: `https://api.unsplash.com/search/photos`,\n//       params: {\n//         client_id: `rM6EL9yHvwZfSzdMRI7q91D8-eTxOjxU1dv1olUW_uw`,\n//         query: \"landing-page-background\",\n//         color: `${query}`,\n//       },\n//     }).then((res) => {\n//       console.log(res.data.results);\n//       this.setState({\n//         background: res.data.results,\n//       });\n//     });\n//   }\n\n\n    //on change we are getting options value which matched with API param colour\n    handleChangeColor = (event) => {\n        event.preventDefault();\n        const usersColor = event.target.value;\n\n        //saving to state\n        this.setState({\n            color: usersColor,\n            background: this.state.background,\n            backgroundSelected: this.state.backgroundSelected,\n            font: this.state.font\n        })\n\n        //passing color and page# to bringImages\n        this.bringImages(usersColor);\n\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\n        setTimeout(() => {\n            this.propPasser()\n        }, 250)\n\n    }\n\n    handleChangeFont = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            color: this.state.color,\n            background: this.state.background,\n            backgroundSelected: this.state.backgroundSelected,\n            font: event.target.value\n        })\n\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\n        setTimeout(() => {\n            this.propPasser()\n        }, 250)\n    }\n\n    handleImageClick = (event) => {\n        event.preventDefault();\n        this.setState({\n            color: this.state.color,\n            background: this.state.background,\n            backgroundSelected: event.target.src,\n            font: this.state.backgroundSelected\n        })\n\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\n        setTimeout(() => {\n            this.propPasser()\n        }, 250)\n    }\n\n    handleResetClick = (event) => {\n        event.preventDefault();\n\n        //reseting form\n        document.getElementById('stylesForm').reset();\n        //clear state\n        this.setState({\n            color: '',\n            background: [],\n            backgroundSelected: '',\n            font: ''\n        })\n    }\n\n    // put it into it's own function so I can delay it.\n    propPasser = () => {\n        this.props.styleInputs(this.state)\n    }\n\n\n\n    render() {\n        return (\n            <div style={style} className=\"innerFormContainer styleOptions\">\n                <h1>STYLE OPTIONS</h1>\n\n                {/* this is option for for our font selection */}\n\n                {/* first five fonts from this article\n                https://www.awwwards.com/20-best-web-fonts-from-google-web-fonts-and-font-face.html*/}\n                <form action=\"\" id=\"stylesForm\">\n                    <div>\n                        <label htmlFor=\"fonts\">Select your font*</label>\n                        {/* listen for changes */}\n                        <select \n                            onChange={this.handleChangeFont} \n                            name=\"fonts\" \n                            id=\"\"\n                        >\n                            <option defaultChecked=\"checked\" value=\"empty\"></option>\n                            <option value=\"alegreya\">Algreya</option>\n                            <option value=\"B612\">B612</option>\n                            <option value=\"muli\">Muli</option>\n                            <option value=\"titillium\">Titillium Web</option>\n                            <option value=\"varela\">Varela</ option>\n                        </select>\n                    </div>\n                    <div>\n\n                        <label htmlFor=\"chooseColor\">Select your color*</label>\n                        {/* every time user passes changes handleChange function activates */}\n\n                        <select \n                            onChange={this.handleChangeColor} \n                            name=\"color\" \n                            id=\"color\"\n                        >\n                            <option value=\"empty\"></option>\n                            {/* values are equal to api documentation, so don't change them */}\n                            <option value=\"black_and_white\">Black and White</option>\n                            <option value=\"black\">Black</option>\n                            <option value=\"white\">White</option>\n                            <option value=\"yellow\">Yellow</option>\n                            <option value=\"orange\">Orange</option>\n                            <option value=\"red\">Red</option>\n                            <option value=\"purple\">Purple</option>\n                            <option value=\"magenta\">Magenta</option>\n                            <option value=\"green\">Green</option>\n                            <option value=\"teal\">Teal</option>\n                            <option value=\"blue\">Blue</option>\n                        </select>\n                    </div>\n                    {/* reset button */}\n                    <button className=\"reset\" onClick={this.handleResetClick} type=\"reset\">RESET</button>\n                    {/* <input onClick={this.handleResetClick} type=\"reset\" value=\"Reset\"/> */}\n                </form>\n                <div className=\"imageDiv\">\n                    <h2>Pick a background for your site!</h2>\n                    <div className=\"ShowImages\">\n                        {this.state.background.map((image) => {\n                            return (\n                                // there are bunch of other options to select\n                                <div className=\"imageContainer\">\n                                    < img\n                                        onClick={this.handleImageClick}\n                                        key={`${image.id}`}\n                                        id={`${image.id}`}\n                                        // instead of small can also use full, raw, regular, thumb\n                                        src={`${image.urls.small}`}\n                                        alt={`${image.alt_description}`}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n//temprorary style\nconst style = {\n  backgroundColor: \"#E7605C\",\n};\n\nexport default StyleOptions;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\n\n\n// Firebase Auth provides different methods of signing in, such as signInWithRedirect, which redirects the user to a new page, and signInWithPopup, which makes use of a pop-up.\nconst provider = new firebase.auth.GoogleAuthProvider();\n\n// Your web app's Firebase configuration\n//  export const firebaseConfig = {\n//     apiKey: API_KEY,\n//     authDomain: \"project6-84919.firebaseapp.com\",\n//     databaseURL: \"https://project6-84919.firebaseio.com\",\n//     projectId: \"project6-84919\",\n//     storageBucket: \"project6-84919.appspot.com\",\n//     messagingSenderId: \"644542789621\",\n//     appId: \"1:644542789621:web:bb1b3509cfa9d95f86d2bc\"\n// };\n\n//For part Deux testing\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAyCFFZDCmoIWU5jyljUXyxyj1EOIJRsIQ\",\n    authDomain: \"project6-two.firebaseapp.com\",\n    databaseURL: \"https://project6-two.firebaseio.com\",\n    projectId: \"project6-two\",\n    storageBucket: \"project6-two.appspot.com\",\n    messagingSenderId: \"459481245957\",\n    appId: \"1:459481245957:web:ae9894b25101f7e2c9af6c\"\n};\n\n\n\n\n\n\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n//export our Google sign-in function\n//allows us to use SignInWithGoogle function in the onClick handler functions for the Sign In with Google button in our SignIn and SignUp components.\nexport const signInWithGoogle = () => {\n    auth.signInWithPopup(provider);\n};\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n        const { email, displayName, photoURL } = user;\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                photoURL,\n                ...additionalData\n            });\n        } catch (error) {\n            console.error(\"Error creating user document\", error);\n        }\n    }\n    return getUserDocument(user.uid);\n};\n\nexport const getUserDocument = async uid => {\n    if (!uid) return null;\n    try {\n        const userDocument = await firestore.doc(`users/${uid}`).get();\n        return {\n            uid,\n            ...userDocument.data()\n        };\n    } catch (error) {\n        console.error(\"Error fetching user\", error);\n    }\n};\n\n\nexport default firebase;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router,\n    NavLink as Link,\n    Route,\n    Redirect\n} from 'react-router-dom';\nimport firebase from './firebase.js';\n\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nconst auth = firebase.auth();\n\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            logedIn: false,\n            user: null\n        }\n    }\n\n    componentDidMount() {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ user });\n            }\n        });\n    }\n\n    login = () => {\n        auth.signInWithPopup(provider)\n            .then((result) => {\n                const user = result.user;\n                this.setState({\n                    user,\n                    loggedIn: true\n                })\n                window.location.pathname = '/about';\n            });\n    }\n\n    logout = () => {\n        auth.signOut()\n            .then(() => {\n                this.setState({\n                    user: null,\n                    logedIn: false\n                })\n                window.location.pathname = '/';\n            });\n    }\n    \n    anon = () => {\n        firebase.auth().signInAnonymously()\n            .then(function () {\n                console.log('Logged in as Anonymous!')\n\n            }).catch(function (error) {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(errorCode);\n                console.log(errorMessage);\n            })\n            window.location.pathname = '/about'\n            // ...\n\n    }\n\n    render() {\n        return (\n            <div>\n                <header>\n                    <h1>Authy App, you pain in the ass!</h1>\n                    {this.state.user ? <button onClick={this.logout}>Log Out</button> : <button onClick={this.login}>Log In</button>}\n                    <button onClick={this.anon}>Log In Anon</button>\n                </header>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport Preview from './Preview.js'\nimport PasteCode from '../PasteCode'\nimport About from \"../../About\";\nimport StyleOptions from \"../../StyleOptions.js\";\n// import Application from \"../../Application.js\";\n// import UserProvider from \"../../UserProvider\";\nimport Login from \"../../Login.js\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass Form extends Component {\n\n  constructor() {\n    super();\n    //create some state in Form.js for all form inputs so they can be used across forms\n    this.state = {\n      //About params\n      firstName: \"\",\n      lastName: \"\",\n      subtitle: \"\",\n      email: \"\",\n      linkedIn: \"\",\n      twitter: \"\",\n      instagram: \"\",\n      github: \"\",\n      blog: \"\",\n      other: \"\",\n      // StyleOptions params\n      color: '',\n      background: [],\n      backgroundSelected: '',\n      // Login user save\n      user: null,\n      font: ''\n\n    }\n  }\n\n  //listen for a click on back button\n  handleBackButton = () => {\n    //this location is specific object property which comes with Router we imported\n    //it tel us which page user on right now\n    //pathname return path we created\n    let page = window.location.pathname\n\n    console.log(window.location)\n    // console.log(page)\n\n    let backTo = '';\n\n    if (page === '/about') {\n      return backTo = '/codeCopy'\n    } else if (page === '/styles') {\n      return backTo = '/about'\n    } else if (page === '/preview') {\n      return backTo = '/styles'\n    } else if (page === '/codeCopy') {\n      return backTo = '/preview'\n    } else if (page === 'login') {\n      return backTo = 'codeCopy'\n    } else {\n      return backTo = '/codeCopy'\n      // on load opens 'home page', so at least we can move back to last page\n    }\n  }\n\n  handleNextButton = () => {\n    //this location is specific object property which comes with Router we imported\n    //it tel us which page user on right now\n    //pathname return path we created\n    let page = window.location.pathname\n\n    // console.log(page)\n\n    let nextTo = '';\n    //back button on about back doesn't return anythig so don't click it until you add more\n    if (page === '/about') {\n      return nextTo = '/styles'\n    } else if (page === '/styles') {\n      return nextTo = '/preview'\n    } else if (page === '/preview') {\n      return nextTo = '/codeCopy'\n    } else if (page === '/codeCopy') {\n      return nextTo = '/login'\n    } else if (page === '/login') {\n      return nextTo = '/about'\n    } else {\n      return nextTo = '/about'\n      // on load opens 'home page', so at least we can move forward to first page\n    }\n  }\n\n  // create handler functions (handle on change) inside Form to update those pieces of state\n  // pass those functions as props to the class components\n  // inside class component, on input change, call those props\n  formParamInputs = (param) => {\n    console.log(param)\n    for (let [key, value] of Object.entries(param)) {\n      this.setState({\n        [key]: value,\n\n      })\n    }\n  }\n\n  styleParamInputs = (param) => {\n    console.log(param);\n    for (let [key, value] of Object.entries(param)) {\n      this.setState({\n        [key]: value,\n      })\n    }\n  }\n\n\n  render() {\n    // console.log(this.props)\n    return (\n      <div className=\"formContainer\">\n          {/* <UserProvider>\n            <Application />\n          </UserProvider> */}\n          {/* <Application /> */}\n          {/* <Login /> */}\n\n          <Route\n            exact\n            path=\"/Application\"\n            render={(props) => (\n              <About formInputs={this.formParamInputs} {...props} />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/about\"\n            render={(props) => (\n              <About\n                formInputs={this.formParamInputs}\n                globalState={this.state}\n                {...props}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/styles\"\n            render={(props) => (\n              <StyleOptions styleInputs={this.styleParamInputs} {...props} />\n            )}\n          />\n\n          <Route\n            path=\"/preview\"\n            render={(props) => (\n              <Preview previewInputs={this.state} {...props} />\n            )}\n          />\n\n          <Route\n            path=\"/codeCopy\"\n            render={(props) => <PasteCode formInputs={this.state} {...props} />}\n          />\n\n          <nav className=\"buttonDiv\">\n            <Link className=\"button back\" to={this.handleBackButton}>Back</Link>\n            {/* Piece of state to  */}\n            {/* create an array to store the steps and use said array plus the value in state to determine where we are in the flow. */}\n            <Link className=\"button\" to={this.handleNextButton}>Next</Link>\n            {/* <Link to=\"/codeCopy\">Next</Link> */}\n          </nav>\n        </div>\n\n    );\n  }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport Header from './components/header/Header.js'\nimport Footer from './components/footer/Footer.js'\nimport Form from './components/form/Form.js'\nimport './App.css';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n  \n  render() {\n    return (\n      <Router>\n      <div className=\"mainContent wrapper\">\n        <div className=\"mainGrid\">\n        <Header />\n\n        <Form />\n        </div>\n        <Footer />\n      </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}