{"version":3,"sources":["assets/logo.png","components/header/Header.js","components/footer/Footer.js","components/form/Preview.js","components/PasteCode.js","About.js","StyleOptions.js","components/form/NextButton.js","components/form/Form.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","console","log","window","location","pathname","where","className","src","logo","alt","to","Footer","href","Preview","state","linkedInHidden","twitterHidden","instagramHidden","githubHidden","blogHidden","otherHidden","color","backSplashChanges","this","props","previewInputs","setState","linkedIn","twitter","instagram","github","blog","other","firstName","lastName","subtitle","email","backgroundImage","backgroundSelected","font","previewStyle","bachgroundColor","fontFamily","style","Component","PasteCode","selectHTML","htmlText","select","document","execCommand","alert","selectCSS","cssText","formInputs","step","handleClickHTML","bind","handleClickCSS","fontTypeCSS","fontHTML","fontFinalCSS","fontLink","backSplash","tabIndex","id","rows","ref","readOnly","value","onClick","About","onSubmit","event","preventDefault","handleOnChange","a","inputName","target","name","val","globalState","action","htmlFor","type","onChange","placeholder","hidden","StyleOptions","handleChangeColor","usersColor","background","bringImages","setTimeout","propPasser","handleChangeFont","handleImageClick","handleResetClick","getElementById","reset","styleInputs","query","page","axios","method","url","params","client_id","then","res","data","results","defaultChecked","map","image","key","urls","small","alt_description","backgroundColor","NextButton","history","useHistory","isEmpty","e","currentFormInputs","some","push","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createHistory","provider","auth","GoogleAuthProvider","l","search","q","slice","split","forEach","v","join","replace","undefined","p","replaceState","hash","App","handleBackButton","handleNextButton","formParamInputs","param","Object","entries","styleParamInputs","updateRender","login","signInWithPopup","result","user","loggedIn","showLogin","logout","signOut","logedIn","anon","signInAnonymously","catch","error","code","message","reload","showButton","onAuthStateChanged","path","render","component","Login","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bb81fa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ad25eba7.png\";","import React from 'react';\r\nimport logo from '../../assets/logo.png'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nfunction Header() {\r\n    console.log(window)\r\n    console.log(window.location.pathname)\r\n    let where = window.location.pathname;\r\n    if (where === '/frontEndDeveloperComingSoon/' || where === '/login') {\r\n        return (\r\n            <header>\r\n                <div className=\"titleContainer\">\r\n                    <img src={logo} alt=\"Future Developer logo\" />\r\n                    <h1>Future Developer</h1>\r\n                </div>\r\n                <div className=\"landingPage sectionContainer\">\r\n                    <h2>So we heard rumors that…</h2>\r\n                    <p>You're accessibility guru, flex box master, and your javascript <span>wizards</span> are under control!</p>\r\n                    <p>So you <span>made</span> it! Welcome to the club.</p>\r\n                    <p>We want to help you! So here is a nice free <span>app</span> which will create a decent looking landing page <span>for</span> your upcoming portfolio.</p>\r\n                    <p>Yes, that's easy. </p>\r\n                    <p>What can we say except <span>you</span>'re welcome.</p>\r\n                </div>\r\n            </header>\r\n        )\r\n    } else if (where !== '/frontEndDeveloperComingSoon') {\r\n        return (\r\n            <header>\r\n                <div className=\"titleContainer\">\r\n                    <img src={logo} alt=\"Future Developer logo\" />\r\n                    <h1>Future Developer</h1>\r\n                </div>\r\n                <div className=\"sectionContainer\">\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink to=\"/about\">\r\n                            <div className=\"sectionBubble\"></div>\r\n                            </NavLink>\r\n                            <p>Your Information</p>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/styles\">\r\n                            <div className=\"sectionBubble\"></div>\r\n                            </NavLink>\r\n                            <p>Options</p>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/preview\">\r\n                            <div className=\"sectionBubble\"></div>\r\n                            </NavLink>\r\n                            <p>Preview</p>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/codecopy\">\r\n                            <div className=\"sectionBubble\"></div>\r\n                            </NavLink>\r\n                            <p>Save/Submit</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport logo from '../../assets/logo.png'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <div className=\"wrapper\">\r\n                <div className=\"footerLinks\">\r\n                    <img src={logo} alt=\"Future Developer logo\" />\r\n                    <ul>\r\n                        <li><a href=\"http://annacodes.tech\"> Anna</a></li>\r\n                        <li><a href=\"http://edwardboland.com\">Edward</a></li>\r\n                        <li><a href=\"tbt.com\">Marie</a></li>\r\n                        <li><a href=\"http://maximilianlau.com\">Max</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport \"./Preview.css\";\r\nclass Preview extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      linkedInHidden: \"hidden\",\r\n      twitterHidden: \"hidden\",\r\n      instagramHidden: \"hidden\",\r\n      githubHidden: \"hidden\",\r\n      blogHidden: \"hidden\",\r\n      otherHidden: \"hidden\",\r\n      color: \"\",\r\n      backSplashChanges: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n        const color = this.props.previewInputs.color\r\n        if (color === \"black_and_white\" | color === \"black\") {\r\n          this.setState({\r\n            color: \"highContrast\",\r\n            backSplashChanges: \"decorativeBackSplash\",\r\n          });\r\n        }else if( color === \"yellow\" | color === \"orange\"){\r\n            this.setState({\r\n                color: \"golden\",\r\n                backSplashChanges: \"goldenBackSplash\"\r\n            })\r\n        }else if (color === \"white\") {\r\n            this.setState({\r\n            color: \"light\",\r\n            backSplashChanges: \"decorativeBackSplash\",\r\n            });\r\n        } else if( color === \"purple\" | color === \"magenta\" | color === \"green\" | color === \"teal\" ) {\r\n            this.setState({\r\n            color: \"mermaid\",\r\n            backSplashChanges: \"decorativeBackSplash\",\r\n            });\r\n        } else if (color === \"red\" | color === \"blue\"){\r\n            this.setState({\r\n                color: \"golden\",\r\n                backSplashChanges: \"decorativeBackSplash\"\r\n            })\r\n        } \r\n        \r\n\r\n    // look at props\r\n    // if email, linkedin, twitter, instagram, blog or other are empty\r\n    // hide icon from preview\r\n    if (this.props.previewInputs.linkedIn !== \"\") {\r\n      this.setState({\r\n        linkedInHidden: \"\",\r\n      });\r\n    }\r\n    if (this.props.previewInputs.twitter !== \"\") {\r\n      this.setState({\r\n        twitterHidden: \"\",\r\n      });\r\n    }\r\n    if (this.props.previewInputs.instagram !== \"\") {\r\n      this.setState({\r\n        instagramHidden: \"\",\r\n      });\r\n    }\r\n    if (this.props.previewInputs.github !== \"\") {\r\n      this.setState({\r\n        githubHidden: \"\",\r\n      });\r\n    }\r\n    if (this.props.previewInputs.blog !== \"\") {\r\n      this.setState({\r\n        blogHidden: \"\",\r\n      });\r\n    }\r\n    if (this.props.previewInputs.other !== \"\") {\r\n      this.setState({\r\n        otherHidden: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const firstName = this.props.previewInputs.firstName;\r\n    const lastName = this.props.previewInputs.lastName;\r\n    const subtitle = this.props.previewInputs.subtitle;\r\n    const email = this.props.previewInputs.email;\r\n    const linkedIn = this.props.previewInputs.linkedIn;\r\n    const twitter = this.props.previewInputs.twitter;\r\n    const instagram = this.props.previewInputs.instagram;\r\n    const github = this.props.previewInputs.github;\r\n    const blog = this.props.previewInputs.blog;\r\n    const other = this.props.previewInputs.other;\r\n    const backgroundImage = this.props.previewInputs.backgroundSelected;\r\n    const font = this.props.previewInputs.font;\r\n\r\n    const previewStyle = {\r\n      backgroundImage: `url(${backgroundImage})`,\r\n      bachgroundColor: `${this.state.color}`,\r\n      fontFamily: `${font}`\r\n    };\r\n\r\n    return (\r\n      <div className=\"previewSitePage innerFormContainer formWrapper\">\r\n        <h1>What do you think?</h1>\r\n        <div className=\"wrapper previewViewPort\" style={previewStyle}>\r\n          <div className={this.state.backSplashChanges}>\r\n            <h2 className={this.state.color}>\r\n              Hello I'm {firstName} {lastName}!\r\n            </h2>\r\n            <h3 className={this.state.color}>My website is coming soon!</h3>\r\n            <h4 className={this.state.color}>{subtitle}</h4>\r\n            <ul>\r\n              <li className={this.state.twitterHidden}>\r\n                <a\r\n                  href={`https://twitter.com/${twitter}`}\r\n                  className={this.state.color}\r\n                >\r\n                  <i className=\"fab fa-twitter\"></i>\r\n                </a>\r\n              </li>\r\n              <li className={this.state.linkedInHidden}>\r\n                <a\r\n                  href={`https://www.linkedin.com/in/${linkedIn}`}\r\n                  className={this.state.color}\r\n                >\r\n                  <i className=\"fab fa-linkedin-in\"></i>\r\n                </a>\r\n              </li>\r\n              <li className={this.state.instagramHidden}>\r\n                <a\r\n                  href={`https://www.instagram.com/${instagram}`}\r\n                  className={this.state.color}\r\n                >\r\n                  <i className=\"fab fa-instagram\"></i>\r\n                </a>\r\n              </li>\r\n              <li className={this.state.githubHidden}>\r\n                <a\r\n                  href={`https://github.com/${github}`}\r\n                  className={this.state.color}\r\n                >\r\n                  <i className=\"fab fa-github\"></i>\r\n                </a>\r\n              </li>\r\n              <li className={this.state.blogHidden}>\r\n                <a href={`${blog}`} className={this.state.color}>\r\n                  <i className=\"fas fa-blog\"></i>\r\n                </a>\r\n              </li>\r\n              <li className={this.state.otherHidden}>\r\n                <a href={`${other}`} className={this.state.color}>\r\n                  <i className=\"fas fa-external-link-alt\"></i>\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href={`${email}`} className={this.state.color}>\r\n                  <i className=\"far fa-envelope\"></i>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Preview","import React, { Component } from 'react';\r\nimport './PasteCode.css';\r\n\r\n\r\nclass PasteCode extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            backgroundSelected: props.formInputs.backgroundSelected,\r\n            blog: props.formInputs.blog,\r\n            color: props.formInputs.color,\r\n            email: props.formInputs.email,\r\n            firstName: props.formInputs.firstName,\r\n            font: props.formInputs.font,\r\n            lastName: props.formInputs.lastName,\r\n            linkedIn: props.formInputs.linkedIn,\r\n            github: props.formInputs.github,\r\n            other: props.formInputs.other,\r\n            step: \"about\",\r\n            subtitle: props.formInputs.subtitle,\r\n            twitter: props.formInputs.twitter\r\n        }\r\n\r\n        // Handles Click buttons on the bottom to refer to the right element\r\n        this.htmlText = {};\r\n        this.handleClickHTML = this.selectHTML.bind(this);\r\n        this.cssText = {};\r\n        this.handleClickCSS = this.selectCSS.bind(this);\r\n    }\r\n\r\n    // selects the value within textarea for HTML\r\n    selectHTML = () => {\r\n        this.htmlText.select();\r\n        document.execCommand('copy');\r\n        alert(\"HTML Copied\")\r\n    }\r\n    // selects the value within textarea for CSS\r\n    selectCSS = () => {\r\n        this.cssText.select();\r\n        document.execCommand('copy');\r\n        alert(\"CSS Copied\")\r\n    }\r\n\r\n    render() {\r\n        //   sans serif // serif change\r\n        const fontTypeCSS = (this.state.font === \"Alegreya\") ? \"serif\" : \"sans-serif\"\r\n        // Changing values for the Link tag in HTML  \r\n        const fontHTML = (this.state.font === 'Titillium Web') ? \"Titillium+Web\" : this.state.font\r\n        // adds the line for font change\r\n        const fontFinalCSS = (this.state.font !== '') ? `font-family : '${this.state.font}', ${fontTypeCSS};` : ``\r\n        // Font in html as a Link file\r\n        const fontLink = (this.state.font !== '') ? `<link href=\"https://fonts.googleapis.com/css2?family=${fontHTML}&display=swap\" rel=\"stylesheet\"> ` : `<!-- This is where you place custom font links -->`\r\n        \r\n        // Color Changing \r\n        const color = (this.state.color === 'white') ? `grey;` : `white;`  \r\n        const backSplash = (this.state.color === 'orange' || this.state.color === 'yellow') ? `rgba(223, 172, 17, 0.59);` : `rgba(255, 255, 255, 0.3);`\r\n        \r\n        // Append the twitter with personal link  or placeholder to the soon to be developer on where to place it\r\n        const linkedIn = (this.state.linkedIn !== '') ? ` <li><a href=https://www.linkedin.com/in/${this.state.linkedIn}><i class=\"fab fa-linkedin-in\"></i></a></li>` : `<!-- Enter your LinkedIn here when you do find it! -->`\r\n        const twitter = (this.state.twitter !== '') ? ` <li><a href=https://twitter.com/${this.state.twitter}><i class=\"fab fa-twitter\"></i></a></li>` : `<!-- Enter your twitter here when you do find it! -->`\r\n        const instagram = (this.state.other !== '') ? ` <li><a href=https://www.instagram.com/${this.state.other}><i class=\"fab fa-instagram\"></i></a></li>` : `<!-- Enter your instagram here when you do find it! -->`\r\n        const github = (this.state.github !== '') ? ` <li><a href=https://www.github.com/${this.state.github}><i class=\"fab fa-github\"></i></a></li>` : `<!-- Enter your github here so people can see your work! -->`\r\n        const email = (this.state.email !== '') ? ` <li><a href=\"mailto: ${this.state.email}\"><i class=\"far fa-envelope\"></i></a></li>` : ``\r\n        const blog = (this.state.blog !== '') ? ` <li><a href=${this.state.github}><i class=\"fab fa-blogger-b\"></i></a></li>` : `<!-- Enter your blog here so people can read your work! -->`\r\n\r\n        const backgroundImage = (this.state.backgroundSelected !== '') ? `background-image:url(\"${this.state.backgroundSelected}\");\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;`: `/* Background image css would have gone here */`\r\n\r\n        const subtitle = (this.state.subtitle !== '') ? `<h4>${this.state.subtitle}</h4>` : `<!-- where you can put a calling card -->`\r\n\r\n\r\n        return (\r\n            <div className=\"CopyPasteWrapper\">\r\n                <div className=\"CopyPasteContainer\">\r\n                    <h1 tabIndex=\"0\" className=\"CopyPasteTitle\">Ok, all set! <span>Feel free to copy the code</span></h1>\r\n                    <div className=\"CopyPasteEach\">\r\n                        <h4 tabIndex=\"0\" id=\"copyHTML\" className=\"CopyPasteType\">HTML</h4>\r\n                        <textarea rows=\"6\" ref={(htmlText) => this.htmlText = htmlText} readOnly value=\r\n                            {`<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Incoming New Developer!</title>\r\n    <script src=\"https://kit.fontawesome.com/c6324a7f25.js\" crossorigin=\"anonymous\"></script>\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n    ${fontLink}\r\n</head>\r\n<body>\r\n    <header>\r\n        <div class=\"wrapper previewViewPort\">\r\n            <div class=\"decorativeBackSplash\">\r\n                <h1>Hello I'm ${this.state.firstName} ${this.state.lastName}!</h1>\r\n                <h3>My website is coming soon!</h3>\r\n                ${subtitle}\r\n                <ul>\r\n                    ${linkedIn}\r\n                    ${twitter}\r\n                    ${instagram}\r\n                    ${github}\r\n                    ${email}\r\n                    ${blog}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </header>\r\n</body>\r\n</html>`}>\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"CopyPasteEach\">\r\n                        <h4 tabIndex=\"0\" className=\"CopyPasteType\">CSS</h4>\r\n                        <textarea rows=\"6\" ref={(cssText) => this.cssText = cssText} readOnly value=\r\n                            {`a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}\r\n\r\n.clearfix:after {visibility: hidden; display: block; font-size: 0; content: ''; clear: both; height: 0; }\r\n\r\n* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }\r\n\r\n.visuallyHidden:not(:focus):not(:active) { position: absolute; width: 1px; height: 1px; margin: -1px;border: 0;padding: 0;white-space: nowrap;clip-path: inset(100%);clip: rect(00 0 0);overflow: hidden;}\r\n\r\n.html {\r\n    ${fontFinalCSS}\r\n    color:${color}\r\n     ${(() => {\r\n        switch (this.state.color) {\r\n        case \"white\": return `text-shadow: 1px 1px 0px rgb(44, 44, 44);`;\r\n        case \"black_and_white\": return `text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.24);`;\r\n        case \"yellow\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\r\n        case \"orange\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\r\n        case \"red\": return ` text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\r\n        case \"blue\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\r\n        case \"purple\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\r\n        case \"magenta\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\r\n        case \"green\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\r\n        case \"teal\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\r\n        default: return `text-shadow: 1px 1px 0px rgb(44, 44, 44);`;\r\n        }\r\n      })()}\r\n}\r\na {\r\n    color:white;\r\n}\r\na:hover {\r\n    color:slateblue;\r\n}\r\n.previewViewPort,\r\n.decorativeBackSplash {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.previewViewPort {\r\n    padding: 30px;\r\n    background-color: plum;\r\n    height:100vh;\r\n    ${backgroundImage}\r\n}\r\n.decorativeBackSplash {\r\n    background-color: ${backSplash}\r\n    border: 5px double rgba(255, 255, 255, 0.2);\r\n    padding: 50px 100px;\r\n    height:40%;\r\n    text-align:center;\r\n}\r\n.previewViewPort ul {\r\n    display: flex;\r\n    font-size: 19px;\r\n}\r\n.previewViewPort li,\r\n.previewViewPort h1,\r\n.previewViewPort h3,\r\n.previewViewPort h4 {\r\n    margin: 10px;\r\n     ${(() => {switch (this.state.color) {\r\n        case \"white\": return `text-shadow: 1px 1px 0px rgb(44, 44, 44);`;\r\n        case \"black_and_white\": return `text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.24);`;\r\n        case \"yellow\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\r\n        case \"orange\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\r\n        case \"red\": return ` text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\r\n        case \"blue\": return `text-shadow: 1px 1px 2px rgb(232, 163, 0);`;\r\n        case \"purple\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\r\n        case \"magenta\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\r\n        case \"green\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\r\n        case \"teal\": return `text-shadow: 1px 1px .5px rgb(0, 108, 58);`;\r\n        default: return `text-shadow: 1px 1px 0px rgb(44, 44, 44);`;\r\n        }\r\n    })()}\r\n}\r\n.previewViewPort h1 {\r\n    font-size: calc(20px + .2vw);\r\n}\r\n.previewViewPort h3 {\r\n    font-size: calc(16.5px + .2vw );\r\n}\r\n.previewViewPort h4 {\r\n    font-size: calc(15px + .2vw )\r\n}`}>\r\n                        </textarea>\r\n                    </div>\r\n                <div className=\"bottomNav\">\r\n                    <button onClick={this.handleClickHTML}>Save HTML</button>\r\n                    <button onClick={this.handleClickCSS}>Save CSS</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PasteCode;","import React, { Component } from 'react';\r\nimport './About.css'\r\n\r\nclass About extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                subtitle: \"\",\r\n                email: \"\",\r\n                linkedIn: \"\",\r\n                twitter: \"\",\r\n                instagram: \"\",\r\n                blog: \"\",\r\n                other: \"\",\r\n        }\r\n    }\r\n\r\n    //to display user input when he goes back to the previous component\r\n    componentDidMount(){\r\n        this.setState({\r\n            firstName: this.props.globalState.firstName,\r\n            lastName: this.props.globalState.lastName,\r\n            subtitle: this.props.globalState.subtitle,\r\n            email: this.props.globalState.email,\r\n            linkedIn: this.props.globalState.linkedIn,\r\n            twitter: this.props.globalState.twitter,\r\n            instagram: this.props.globalState.instagram,\r\n            other: this.props.globalState.other\r\n\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        //prevent default page refresh\r\n        event.preventDefault();\r\n        \r\n        //emptying states after submission and other code is done using them (so it doesn't sit in form boxes)\r\n        this.setState({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            subtitle: \"\",\r\n            email: \"\",\r\n            linkedIn: \"\",\r\n            twitter: \"\",\r\n            instagram: \"\",\r\n            blog: \"\",\r\n            other: \"\",\r\n        })\r\n    }\r\n\r\n    handleOnChange = async(event) => {\r\n        // setting the name and val to their own variables allows us to set them to their own states without having to write multiple setStates for each form input.\r\n        let inputName = event.target.name\r\n        let val = event.target.value\r\n        await this.setState({\r\n            [inputName]: val\r\n        })\r\n        this.props.formInputs(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"innerFormContainer formWrapper about\">\r\n                <h1>Hello! Please tell us a little about yourself.</h1>\r\n                <form action=\"\" onSubmit={this.onSubmit}>\r\n\r\n                    <fieldset className=\"firstLastName\">\r\n                        <div className=\"firstNameDiv\">\r\n                        <label htmlFor=\"firstName:\">First name*:</label>\r\n                        <input type=\"text\" value={this.state.firstName} onChange={this.handleOnChange} name=\"firstName\" />\r\n                        </div>\r\n                        <div className=\"lastNameDiv\">\r\n                        <label htmlFor=\"lastName:\">Last name*:</label>\r\n                        <input type=\"text\" value={this.state.lastName} onChange={this.handleOnChange} name=\"lastName\" />\r\n                        </div>\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"subtitle\">\r\n                        <label htmlFor=\"subtitle\">Subtitle*:</label>\r\n                        <input type=\"text\" value={this.state.subtitle} onChange={this.handleOnChange} name=\"subtitle\" />\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"email\">\r\n                        <label htmlFor=\"email\">Email*:</label>\r\n                        <input type=\"email\" value={this.state.email} onChange={this.handleOnChange} name=\"email\" />\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"socialMedia\">\r\n                        <div>\r\n                        <label htmlFor=\"linkedIn\">LinkedIn</label>\r\n                            <input type=\"text\" value={this.state.linkedIn} onChange={this.handleOnChange} name=\"linkedIn\" placeholder=\"@userName\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                        <label htmlFor=\"twitter\">Twitter:</label>\r\n                            <input type=\"text\" value={this.state.twitter} onChange={this.handleOnChange} name=\"twitter\" placeholder=\"@userName\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                        <label htmlFor=\"github\">GitHub:</label>\r\n                            <input type=\"text\" value={this.state.github} onChange={this.handleOnChange} name=\"github\" placeholder=\"@userName\"/>\r\n                        </div>\r\n\r\n                    </fieldset>\r\n                    <fieldset className=\"socialMedia\">\r\n                        <div>\r\n                        <label htmlFor=\"instagram\">Instagram:</label>\r\n                            <input type=\"text\" value={this.state.instagram} onChange={this.handleOnChange} name=\"instagram\" placeholder=\"@userName\" />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"blog\">Blog:</label>\r\n                            <input type=\"text\" value={this.state.blog} onChange={this.handleOnChange} name=\"blog\"  placeholder=\"https://fullwebsiteurl.com\"/>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label htmlFor=\"other\">Other:</label>\r\n                            <input type=\"text\" value={this.state.other} onChange={this.handleOnChange} name=\"other\" placeholder=\"https://fullwebsiteurl.com\"/>\r\n                        </div>\r\n\r\n                    </fieldset>\r\n                    <span>*Required Fields</span>\r\n\r\n                    <input type=\"submit\" hidden />\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./StyleOptions.css\";\r\n\r\n//hiding api hehehehe\r\nconst API_KEY = process.env.REACT_APP_UNSPLASH_API_KEY;\r\nexport class StyleOptions extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            // this is our user's color selection\r\n            color: '',\r\n            //don't pass this prop, just to store options for user to pick from\r\n            background: [],\r\n            // id of selected background goes here\r\n            backgroundSelected: '',\r\n            font: ''\r\n        };\r\n        //this is to make call b functions work\r\n        this.handleChangeColor = this.handleChangeColor.bind(this);\r\n        this.handleChangeFont = this.handleChangeFont.bind(this);\r\n        this.handleImageClick = this.handleImageClick.bind(this);\r\n        this.handleResetClick = this.handleResetClick.bind(this);\r\n    }\r\n    \r\n    // bringImages(query, page) {\r\n    //     axios({\r\n    //         method: 'GET',\r\n    //         url: `https://api.unsplash.com/search/photos`,\r\n    //         params: {\r\n    //             client_id: API_KEY,\r\n    //             query: 'landing-page-background',\r\n    //             color: `${query}`\r\n    //         }\r\n    //     }).then((res) => {\r\n    //         console.log(res.data.results)\r\n    //         this.setState({\r\n    //             background: res.data.results\r\n    //         });\r\n    //     })\r\n    // }\r\n\r\n        bringImages(query, page) {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://api.unsplash.com/search/photos`,\r\n      params: {\r\n        client_id: `rM6EL9yHvwZfSzdMRI7q91D8-eTxOjxU1dv1olUW_uw`,\r\n        query: \"landing-page-background\",\r\n        color: `${query}`,\r\n      },\r\n    }).then((res) => {\r\n      this.setState({\r\n        background: res.data.results,\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n    //on change we are getting options value which matched with API param colour\r\n    handleChangeColor = (event) => {\r\n        event.preventDefault();\r\n        const usersColor = event.target.value;\r\n\r\n        //saving to state\r\n        this.setState({\r\n            color: usersColor,\r\n            background: this.state.background,\r\n            backgroundSelected: this.state.backgroundSelected,\r\n            font: this.state.font\r\n        })\r\n\r\n        //passing color and page# to bringImages\r\n        this.bringImages(usersColor);\r\n\r\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\r\n        setTimeout(() => {\r\n            this.propPasser()\r\n        }, 250)\r\n\r\n    }\r\n\r\n    handleChangeFont = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            color: this.state.color,\r\n            background: this.state.background,\r\n            backgroundSelected: this.state.backgroundSelected,\r\n            font: event.target.value\r\n        })\r\n\r\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\r\n        setTimeout(() => {\r\n            this.propPasser()\r\n        }, 250)\r\n    }\r\n\r\n    handleImageClick = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            color: this.state.color,\r\n            background: this.state.background,\r\n            backgroundSelected: event.target.src,\r\n            font: this.state.font\r\n        })\r\n\r\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\r\n        setTimeout(() => {\r\n            this.propPasser()\r\n        }, 250)\r\n    }\r\n\r\n    handleResetClick = (event) => {\r\n        event.preventDefault();\r\n\r\n        //reseting form\r\n        document.getElementById('stylesForm').reset();\r\n        //clear state\r\n        this.setState({\r\n            color: '',\r\n            background: [],\r\n            backgroundSelected: '',\r\n            font: ''\r\n        })\r\n    }\r\n\r\n    // put it into it's own function so I can delay it.\r\n    propPasser = () => {\r\n        this.props.styleInputs(this.state)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={style} className=\"innerFormContainer styleOptions\">\r\n                <h1>STYLE OPTIONS</h1>\r\n\r\n                {/* this is option for for our font selection */}\r\n\r\n                {/* first five fonts from this article\r\n                https://www.awwwards.com/20-best-web-fonts-from-google-web-fonts-and-font-face.html*/}\r\n                <form action=\"\" id=\"stylesForm\">\r\n                    <div>\r\n                        <label htmlFor=\"fonts\">Select your font*</label>\r\n                        {/* listen for changes */}\r\n                        <select \r\n                            onChange={this.handleChangeFont} \r\n                            name=\"fonts\" \r\n                            id=\"\"\r\n                        >\r\n                            <option defaultChecked=\"checked\" value=\"empty\"></option>\r\n                            <option value=\"alegreya\">Algreya</option>\r\n                            <option value=\"B612\">B612</option>\r\n                            <option value=\"muli\">Muli</option>\r\n                            <option value=\"titillium\">Titillium Web</option>\r\n                            <option value=\"varela\">Varela</ option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n\r\n                        <label htmlFor=\"chooseColor\">Select your color*</label>\r\n                        {/* every time user passes changes handleChange function activates */}\r\n\r\n                        <select \r\n                            onChange={this.handleChangeColor} \r\n                            name=\"color\" \r\n                            id=\"color\"\r\n                        >\r\n                            <option value=\"empty\"></option>\r\n                            {/* values are equal to api documentation, so don't change them */}\r\n                            <option value=\"black_and_white\">Black and White</option>\r\n                            <option value=\"black\">Black</option>\r\n                            <option value=\"white\">White</option>\r\n                            <option value=\"yellow\">Yellow</option>\r\n                            <option value=\"orange\">Orange</option>\r\n                            <option value=\"red\">Red</option>\r\n                            <option value=\"purple\">Purple</option>\r\n                            <option value=\"magenta\">Magenta</option>\r\n                            <option value=\"green\">Green</option>\r\n                            <option value=\"teal\">Teal</option>\r\n                            <option value=\"blue\">Blue</option>\r\n                        </select>\r\n                    </div>\r\n                    {/* reset button */}\r\n                    <button className=\"reset\" onClick={this.handleResetClick} type=\"reset\">RESET</button>\r\n                    {/* <input onClick={this.handleResetClick} type=\"reset\" value=\"Reset\"/> */}\r\n                </form>\r\n                <div className=\"imageDiv\">\r\n                    <h2>Pick a background for your site!*</h2>\r\n                    <div className=\"ShowImages\">\r\n                        {this.state.background.map((image) => {\r\n                            return (\r\n                                // there are bunch of other options to select\r\n                                <div className=\"imageContainer\">\r\n                                    < img\r\n                                        onClick={this.handleImageClick}\r\n                                        key={`${image.id}`}\r\n                                        id={`${image.id}`}\r\n                                        // instead of small can also use full, raw, regular, thumb\r\n                                        src={`${image.urls.small}`}\r\n                                        alt={`${image.alt_description}`}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                    <span>*Required Fields</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//temprorary style\r\nconst style = {\r\n  backgroundColor: \"#E7605C\",\r\n};\r\n\r\nexport default StyleOptions;\r\n","import React from \"react\"\r\nimport { useHistory } from \"react-router-dom\";\r\n// import Form from \"./Form\"\r\n\r\nfunction NextButton(props) {\r\n  const history = useHistory();\r\n\r\n  function handleClick() {    \r\n        let page = window.location.pathname;\r\n\r\n        const isEmpty = (e) => e === \"\";\r\n\r\n\r\n        let nextTo = \"\";\r\n        //back button on about back doesn't return anythig so don't click it until you add more\r\n        if (page === \"/about\") {        \r\n            if ([props.currentFormInputs.firstName, props.currentFormInputs.lastName, props.currentFormInputs.subtitle, props.currentFormInputs.email].some(isEmpty)\r\n            ){\r\n                alert(\"Please fill out the required fields.\");\r\n        } else {\r\n            history.push(\"/styles\");\r\n        }\r\n        } else if (page === \"/styles\") {\r\n                if (\r\n                  [\r\n                    props.currentFormInputs.color,\r\n                    props.currentFormInputs.background,\r\n                    props.currentFormInputs.backgroundSelected,\r\n                  ].some(isEmpty)\r\n                ) {\r\n                    alert(\"Please fill out the required fields.\");\r\n                } else {\r\n                    history.push(\"/preview\");\r\n                }\r\n            \r\n        } else if (page === \"/preview\") {\r\n            history.push(\"/codeCopy\");\r\n        } else if (page === \"/codeCopy\") {\r\n            // const r = window.confirm(\"Pressing next. Do you wish to erase your creation?\");\r\n            // if (r == true) {\r\n            //     history.push(\"/login\");\r\n            // }\r\n            history.push(\"/login\");\r\n        } else if (page === \"/login\") {\r\n            history.push(\"/about\");\r\n        } else {\r\n            history.push(\"/about\");\r\n          // on load opens 'home page', so at least we can move forward to first page\r\n        }\r\n\r\n  }\r\n\r\n  return (\r\n    <button type=\"button\" onClick={handleClick}>\r\n      Next\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default NextButton","\r\n// import React, { Component } from 'react';\r\n// import Preview from './Preview.js'\r\n// import PasteCode from '../PasteCode'\r\n// import About from \"../../About\";\r\n// import StyleOptions from \"../../StyleOptions.js\";\r\n// import Login from \"../../Login.js\";\r\n// import NextButton from \"./NextButton.js\";\r\n\r\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\n// class Form extends Component {\r\n//   constructor() {\r\n//     super();\r\n//     //create some state in Form.js for all form inputs so they can be used across forms\r\n//     this.state = {\r\n//       //About params\r\n//       firstName: \"\",\r\n//       lastName: \"\",\r\n//       subtitle: \"\",\r\n//       email: \"\",\r\n//       linkedIn: \"\",\r\n//       twitter: \"\",\r\n//       instagram: \"\",\r\n//       github: \"\",\r\n//       blog: \"\",\r\n//       other: \"\",\r\n//       // StyleOptions params\r\n//       color: \"\",\r\n//       background: [],\r\n//       backgroundSelected: \"\",\r\n//       // Login user save\r\n//       user: null,\r\n//       font: '',\r\n//     }\r\n//   }\r\n\r\n//   //listen for a click on back button\r\n//   handleBackButton = () => {\r\n//     //this location is specific object property which comes with Router we imported\r\n//     //it tel us which page user on right now\r\n//     //pathname return path we created\r\n//     let page = window.location.pathname;\r\n\r\n//     let backTo = '';\r\n\r\n//     //removed login page from if loop as it breaks in live. Works locally.\r\n//     if (page === '/about') {\r\n//       return backTo = '/codeCopy'\r\n//     } else if (page === '/styles') {\r\n//       return backTo = '/about'\r\n//     } else if (page === '/preview') {\r\n//       return backTo = '/styles'\r\n//     } else if (page === '/codeCopy') {\r\n//       return backTo = '/preview'\r\n//     } else {\r\n//       return (backTo = \"/codeCopy\");\r\n//     }\r\n//   }\r\n\r\n//   //listen for a click on next  button\r\n//   handleNextButton = () => {\r\n//     //this location is specific object property which comes with Router we imported\r\n//     //it tel us which page user on right now\r\n//     //pathname return path we created\r\n//     let page = window.location.pathname\r\n\r\n//     //removed login page from if loop as it breaks in live. Works locally.\r\n//     let nextTo = '';\r\n//     if (page === '/about') {\r\n//       return nextTo = '/styles'\r\n//     } else if (page === '/styles') {\r\n//       return nextTo = '/preview'\r\n//     } else if (page === '/preview') {\r\n//       return nextTo = '/codeCopy'\r\n//     } else if (page === '/codeCopy') {\r\n//       return nextTo = '/about'\r\n//     } else {\r\n//       return nextTo = '/about'\r\n//     }\r\n//   }\r\n\r\n//   // create handler functions (handle on change) inside Form to update those pieces of state\r\n//   // pass those functions as props to the class components\r\n//   // inside class component, on input change, call those props\r\n//   formParamInputs = (param) => {\r\n//     for (let [key, value] of Object.entries(param)) {\r\n//       this.setState({\r\n//         [key]: value,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   styleParamInputs = (param) => {\r\n//     for (let [key, value] of Object.entries(param)) {\r\n//       this.setState({\r\n//         [key]: value,\r\n//       });\r\n//     }\r\n//   };\r\n\r\n\r\n//   render() {\r\n//     return (\r\n//       <Router>\r\n//         <div className=\"formContainer\">\r\n\r\n//           <Route\r\n//             exact\r\n//             path=\"/Application\"\r\n//             render={(props) => (\r\n//               <About formInputs={this.formParamInputs} {...props} />\r\n//             )}\r\n//           />\r\n\r\n//           <Route\r\n//             exact\r\n//             path=\"/about\"\r\n//             render={(props) => (\r\n//               <About\r\n//                 formInputs={this.formParamInputs}\r\n//                 globalState={this.state}\r\n//                 {...props}\r\n//               />\r\n//             )}\r\n//           />\r\n\r\n//           <Route\r\n//             path=\"/styles\"\r\n//             render={(props) => (\r\n//               <StyleOptions styleInputs={this.styleParamInputs} {...props} />\r\n//             )}\r\n//           />\r\n\r\n//           <Route\r\n//             path=\"/preview\"\r\n//             render={(props) => (\r\n//               <Preview previewInputs={this.state} {...props} />\r\n//             )}\r\n//           />\r\n\r\n//           <Route\r\n//             path=\"/codeCopy\"\r\n//             render={(props) => <PasteCode formInputs={this.state} {...props} />}\r\n//           />\r\n\r\n//           <Route path =\"/login\" component={Login} />\r\n\r\n//           <nav className=\"buttonDiv\">\r\n//             <Link className=\"button back\" to={this.handleBackButton} onClick={this.props.updateRender}>Back</Link>\r\n\r\n//             {/* <NextButton currentFormInputs={this.state} /> */}\r\n//             <Link className=\"button\" to={this.handleNextButton} onClick={this.props.updateRender}>Next</Link>\r\n//           </nav>\r\n//         </div>\r\n//         </Router>\r\n\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Form;\r\nimport React, { Component } from 'react';\r\nimport Preview from './Preview.js'\r\nimport PasteCode from '../PasteCode'\r\nimport About from \"../../About\";\r\nimport StyleOptions from \"../../StyleOptions.js\";\r\nimport Login from \"../../Login.js\";\r\nimport NextButton from \"./NextButton.js\";\r\n\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nclass Form extends Component {\r\n  constructor() {\r\n    super();\r\n    //create some state in Form.js for all form inputs so they can be used across forms\r\n    this.state = {\r\n      //About params\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      subtitle: \"\",\r\n      email: \"\",\r\n      linkedIn: \"\",\r\n      twitter: \"\",\r\n      instagram: \"\",\r\n      github: \"\",\r\n      blog: \"\",\r\n      other: \"\",\r\n      // StyleOptions params\r\n      color: \"\",\r\n      background: [],\r\n      backgroundSelected: \"\",\r\n      // Login user save\r\n      user: null,\r\n      font: '',\r\n    }\r\n  }\r\n\r\n  //listen for a click on back button\r\n  handleBackButton = () => {\r\n    //this location is specific object property which comes with Router we imported\r\n    //it tel us which page user on right now\r\n    //pathname return path we created\r\n    let page = window.location.pathname;\r\n\r\n    let backTo = '';\r\n\r\n    //removed login page from if loop as it breaks in live. Works locally.\r\n    if (page === '/about') {\r\n      return backTo = '/codeCopy'\r\n    } else if (page === '/styles') {\r\n      return backTo = '/about'\r\n    } else if (page === '/preview') {\r\n      return backTo = '/styles'\r\n    } else if (page === '/codeCopy') {\r\n      return backTo = '/preview'\r\n    } else {\r\n      return (backTo = \"/codeCopy\");\r\n    }\r\n  }\r\n\r\n  //listen for a click on next  button\r\n  handleNextButton = () => {\r\n    //this location is specific object property which comes with Router we imported\r\n    //it tel us which page user on right now\r\n    //pathname return path we created\r\n    let page = window.location.pathname\r\n\r\n    //removed login page from if loop as it breaks in live. Works locally.\r\n    let nextTo = '';\r\n    if (page === '/about') {\r\n      return nextTo = '/styles'\r\n    } else if (page === '/styles') {\r\n      return nextTo = '/preview'\r\n    } else if (page === '/preview') {\r\n      return nextTo = '/codeCopy'\r\n    } else if (page === '/codeCopy') {\r\n      return nextTo = '/about'\r\n    } else {\r\n      return nextTo = '/about'\r\n    }\r\n  }\r\n\r\n  // create handler functions (handle on change) inside Form to update those pieces of state\r\n  // pass those functions as props to the class components\r\n  // inside class component, on input change, call those props\r\n  formParamInputs = (param) => {\r\n    for (let [key, value] of Object.entries(param)) {\r\n      this.setState({\r\n        [key]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  styleParamInputs = (param) => {\r\n    for (let [key, value] of Object.entries(param)) {\r\n      this.setState({\r\n        [key]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"formContainer\">\r\n\r\n          <Route\r\n            exact\r\n            path=\"/Application\"\r\n            render={(props) => (\r\n              <About formInputs={this.formParamInputs} {...props} />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/about\"\r\n            render={(props) => (\r\n              <About\r\n                formInputs={this.formParamInputs}\r\n                globalState={this.state}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/styles\"\r\n            render={(props) => (\r\n              <StyleOptions styleInputs={this.styleParamInputs} {...props} />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/preview\"\r\n            render={(props) => (\r\n              <Preview previewInputs={this.state} {...props} />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            path=\"/codeCopy\"\r\n            render={(props) => <PasteCode formInputs={this.state} {...props} />}\r\n          />\r\n\r\n          <Route path =\"/login\" component={Login} />\r\n\r\n          <nav className=\"buttonDiv\">\r\n            <Link className=\"button back\" to={this.handleBackButton} onClick={this.props.updateRender}>Back</Link>\r\n\r\n            <NextButton currentFormInputs={this.state} />\r\n            {/* <Link className=\"button\" to={this.handleNextButton} onClick={this.props.updateRender}>Next</Link> */}\r\n          </nav>\r\n        </div>\r\n        </Router>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAyCFFZDCmoIWU5jyljUXyxyj1EOIJRsIQ\",\r\n    authDomain: \"project6-two.firebaseapp.com\",\r\n    databaseURL: \"https://project6-two.firebaseio.com\",\r\n    projectId: \"project6-two\",\r\n    storageBucket: \"project6-two.appspot.com\",\r\n    messagingSenderId: \"459481245957\",\r\n    appId: \"1:459481245957:web:ae9894b25101f7e2c9af6c\"\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport Header from './components/header/Header.js'\r\nimport Footer from './components/footer/Footer.js'\r\nimport Form from './components/form/Form.js'\r\nimport Preview from './components/form/Preview.js'\r\nimport PasteCode from './components/PasteCode.js'\r\nimport About from \"./About.js\";\r\nimport StyleOptions from \"./StyleOptions.js\";\r\nimport Login from \"./Login.js\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport firebase from './firebase.js';\r\nimport createHistory from 'history/createBrowserHistory';\r\nexport const history = createHistory();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst auth = firebase.auth();\r\n\r\n// Single Page Apps for GitHub Pages\r\n// https://github.com/rafgraph/spa-github-pages\r\n// Copyright (c) 2016 Rafael Pedicini, licensed under the MIT License\r\n// ----------------------------------------------------------------------\r\n// This script checks to see if a redirect is present in the query string\r\n// and converts it back into the correct url and adds it to the\r\n// browser's history using window.history.replaceState(...),\r\n// which won't cause the browser to attempt to load the new url.\r\n// When the single page app is loaded further down in this file,\r\n// the correct url will be waiting in the browser's history for\r\n// the single page app to route accordingly.\r\n(function (l) {\r\n  if (l.search) {\r\n    var q = {};\r\n    l.search.slice(1).split('&').forEach(function (v) {\r\n      var a = v.split('=');\r\n      q[a[0]] = a.slice(1).join('=').replace(/~and~/g, '&');\r\n    });\r\n    if (q.p !== undefined) {\r\n      window.history.replaceState(null, null,\r\n        l.pathname.slice(0, -1) + (q.p || '') +\r\n        (q.q ? ('?' + q.q) : '') +\r\n        l.hash\r\n      );\r\n    }\r\n  }\r\n}(window.location))\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    //create some state in Form.js for all form inputs so they can be used across forms\r\n    this.state = {\r\n      //About params\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      subtitle: \"\",\r\n      email: \"\",\r\n      linkedIn: \"\",\r\n      twitter: \"\",\r\n      instagram: \"\",\r\n      github: \"\",\r\n      blog: \"\",\r\n      other: \"\",\r\n      // StyleOptions params\r\n      color: \"\",\r\n      background: [],\r\n      backgroundSelected: \"\",\r\n      // Login user save\r\n      user: null,\r\n      logedIn: false,\r\n      font: '',\r\n      showLogin: true,\r\n      showButton: false,\r\n    }\r\n  }\r\n\r\n    //listen for a click on back button\r\n    handleBackButton = () => {\r\n      //this location is specific object property which comes with Router we imported\r\n      //it tel us which page user on right now\r\n      //pathname return path we created\r\n      let page = window.location.pathname;\r\n\r\n      let backTo = '';\r\n\r\n      //removed login page from if loop as it breaks in live. Works locally.\r\n      if (page === '/about') {\r\n        return backTo = '/codeCopy'\r\n      } else if (page === '/styles') {\r\n        return backTo = '/about'\r\n      } else if (page === '/preview') {\r\n        return backTo = '/styles'\r\n      } else if (page === '/codeCopy') {\r\n        return backTo = '/preview'\r\n      } else {\r\n        return (backTo = \"/codeCopy\");\r\n      }\r\n    }\r\n\r\n    //listen for a click on next  button\r\n    handleNextButton = () => {\r\n      //this location is specific object property which comes with Router we imported\r\n      //it tel us which page user on right now\r\n      //pathname return path we created\r\n      let page = window.location.pathname\r\n\r\n      //removed login page from if loop as it breaks in live. Works locally.\r\n      let nextTo = '';\r\n      if (page === '/about') {\r\n        return nextTo = '/styles'\r\n      } else if (page === '/styles') {\r\n        return nextTo = '/preview'\r\n      } else if (page === '/preview') {\r\n        return nextTo = '/codeCopy'\r\n      } else if (page === '/codeCopy') {\r\n        return nextTo = '/about'\r\n      } else {\r\n        return nextTo = '/about'\r\n      }\r\n    }\r\n\r\n    // create handler functions (handle on change) inside Form to update those pieces of state\r\n    // pass those functions as props to the class components\r\n    // inside class component, on input change, call those props\r\n    formParamInputs = (param) => {\r\n      for (let [key, value] of Object.entries(param)) {\r\n        this.setState({\r\n          [key]: value,\r\n        });\r\n      }\r\n    };\r\n\r\n    styleParamInputs = (param) => {\r\n      for (let [key, value] of Object.entries(param)) {\r\n        this.setState({\r\n          [key]: value,\r\n        });\r\n      }\r\n    };\r\n\r\n    updateRender = () => {\r\n    // Force a render without state change\r\n    // this.forceUpdate();\r\n  }\r\n\r\n  componentDidMount() {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({ user });\r\n      }\r\n    });\r\n    if (window.location.pathname === '/frontEndDeveloperComingSoon/about' || window.location.pathname === '/frontEndDeveloperComingSoon/styles' || window.location.pathname === '/frontEndDeveloperComingSoon/preview' || window.location.pathname === '/frontEndDeveloperComingSoon/codeCopy') {\r\n      this.setState({\r\n        showLogin: false\r\n      })\r\n    }\r\n    if (window.location.pathname === '/frontEndDeveloperComingSoon/about' || window.location.pathname === '/frontEndDeveloperComingSoon/styles' || window.location.pathname === '/frontEndDeveloperComingSoon/preview' || window.location.pathname === '/frontEndDeveloperComingSoon/codeCopy') {\r\n      this.setState({\r\n        showButton:true\r\n      })\r\n    }\r\n  }\r\n\r\n  login = () => {\r\n    auth.signInWithPopup(provider)\r\n      .then((result) => {\r\n        const user = result.user;\r\n        this.setState({\r\n          user,\r\n          loggedIn: true,\r\n          showLogin: false\r\n        })\r\n        window.location.pathname = '/about';\r\n      });\r\n  }\r\n\r\n  logout = () => {\r\n    auth.signOut()\r\n      .then(() => {\r\n        this.setState({\r\n          user: null,\r\n          logedIn: false,\r\n          showLogin: true,\r\n        })\r\n        window.location.pathname = '/frontEndDeveloperComingSoon/';\r\n      });\r\n  }\r\n\r\n  anon = () => {\r\n    firebase.auth().signInAnonymously()\r\n      .then(function () {\r\n\r\n      }).catch(function (error) {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n      })\r\n    \r\n  \r\n    //This breaks anon login. Runs faster than server leaving for now as it is needed to work app\r\n\r\n    // window.location.pathname = '/frontEndDeveloperComingSoon/about'\r\n\r\n    setTimeout(() => {\r\n      // this.props.history.push(\"/frontEndDeveloperComingSoon/about\")\r\n      history.push('/frontEndDeveloperComingSoon/about')\r\n      window.location.reload()\r\n\r\n    }, 1000)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <HashRouter history={history}>\r\n      <div className=\"mainContent wrapper\">\r\n        <div className=\"mainGrid\">\r\n        <Header />\r\n\r\n\r\n            {/* <Router> */}\r\n            \r\n              <div className=\"formContainer\">\r\n\r\n                {/* Below code will hide the div is showLogin is false. Issue is having show login as false after everything is rendered */}\r\n                {this.state.showLogin ?\r\n                <div className=\"loginForm\">\r\n                  <h1>Welcome</h1>\r\n                  <button onClick={this.anon}>Log In Anon</button>\r\n                  {this.state.user ? <button onClick={this.logout}>Log Out</button> : <button onClick={this.login}>Log In</button>}\r\n\r\n                  </div> \r\n                  : null} \r\n                \r\n                <Route\r\n                  \r\n                  path=\"/frontEndDeveloperComingSoon/Application\"\r\n                  render={(props) => (\r\n                    <About formInputs={this.formParamInputs} {...props} />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  \r\n                  path=\"/frontEndDeveloperComingSoon/about\"\r\n                  render={(props) => (\r\n                    <About\r\n                      formInputs={this.formParamInputs}\r\n                      globalState={this.state}\r\n                      {...props}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/frontEndDeveloperComingSoon/styles\"\r\n                  render={(props) => (\r\n                    <StyleOptions styleInputs={this.styleParamInputs} {...props} />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/frontEndDeveloperComingSoon/preview\"\r\n                  render={(props) => (\r\n                    <Preview previewInputs={this.state} {...props} />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/frontEndDeveloperComingSoon/codeCopy\"\r\n                  render={(props) => <PasteCode formInputs={this.state} {...props} />}\r\n                />\r\n\r\n                <Route path=\"/login\" component={Login} />\r\n                {this.state.showButton ?\r\n                <nav className=\"buttonDiv\">\r\n                  <Link className=\"button back\" to={this.handleBackButton} onClick={this.props.updateRender}>Back</Link>\r\n\r\n                  {/* <NextButton currentFormInputs={this.state} /> */}\r\n                  <Link className=\"button\" to={this.handleNextButton} onClick={this.props.updateRender}>Next</Link>\r\n                </nav>\r\n                : null}\r\n              </div>\r\n            {/* </Router> */}\r\n\r\n\r\n        {/* <Form updateRender={this.updateRender}/> */}\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}