{"version":3,"sources":["assets/logo.png","components/header/Header.js","components/footer/Footer.js","components/form/Preview.js","components/PasteCode.js","About.js","StyleOptions.js","components/form/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","Footer","href","Preview","state","twitterHidden","firstName","this","props","previewInputs","lastName","subtitle","email","linkedIn","twitter","instagram","blog","github","background","color","backgroundImage","font","previewStyle","width","height","backgroundRepeat","backgroundPosition","style","hiddenClass","Component","PasteCode","selectHTML","htmlText","select","console","log","selectCSS","cssText","colorChoice","notsure","handleClickHTML","bind","handleClickCSS","tabIndex","id","rows","ref","readOnly","value","onClick","About","onSubmit","event","preventDefault","setState","other","handleOnChange","inputName","target","name","val","formInputs","action","htmlFor","type","onChange","hidden","API_KEY","process","REACT_APP_UNSPLASH_API_KEY","StyleOptions","handleChangeColor","usersColor","backgroundSelected","bringImages","setTimeout","propPasser","handleChangeFont","handleImageClick","handleResetClick","document","getElementById","reset","styleInputs","query","page","axios","method","url","params","client_id","then","res","data","results","defaultChecked","map","image","key","urls","full","alt_description","backgroundColor","Form","handleBackButton","window","location","pathname","handleNextButton","formParamInputs","param","Object","entries","styleParamInputs","to","exact","path","render","stateSomeFunction","App","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1c7e439.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ad25eba7.png\";","import React from 'react';\nimport logo from '../../assets/logo.png'\n\nfunction Header() {\n    return (\n        <header>\n            <div className=\"titleContainer\">\n                <img src={logo} alt=\"Future Developer logo\" />\n                <h1>Future Developer</h1>\n            </div>\n            <div className=\"sectionContainer\">\n                <ul>\n                    <li>\n                        <div className=\"sectionBubble\"></div>\n                        <p>Your Information</p>\n                    </li>\n                    <li>\n                        <div className=\"sectionBubble\"></div>\n                        <p>Options</p>\n                    </li>\n                    <li>\n                        <div className=\"sectionBubble\"></div>\n                        <p>Preview</p>\n                    </li>\n                    <li>\n                        <div className=\"sectionBubble\"></div>\n                        <p>Save/Submit</p>\n                    </li>\n                </ul> \n\n            </div>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport logo from '../../assets/logo.png'\n\nfunction Footer() {\n    return (\n        <footer>\n            <div className=\"wrapper\">\n                <div className=\"footerLinks\">\n                    <img src={logo} alt=\"Future Developer logo\" />\n                    <ul>\n                        <li><a href=\"mmm.com\">ANNA</a></li>\n                        <li><a href=\"https.com\">EDWARD</a></li>\n                        <li><a href=\"lslsl.com\">MARIE</a></li>\n                        <li><a href=\"http://maximilianlau.com\">MAX</a></li>\n                    </ul>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport './Preview.css'\n\n\nclass Preview extends Component {\n    constructor() {\n        super();\n        this.state = {\n            //true/false\n            twitterHidden: \"\",\n        }\n    }\n    \n\n\n\n    \n    render() {\n\n        // if email, linkedin, twitter, instagram, blog or other are empty \n        \n        // dont show icon\n        const firstName = this.props.previewInputs.firstName\n        const lastName = this.props.previewInputs.lastName\n        const subtitle = this.props.previewInputs.subtitle\n        const email = this.props.previewInputs.email\n        const linkedIn = this.props.previewInputs.linkedIn\n        const twitter = this.props.previewInputs.twitter\n        const instagram = this.props.previewInputs.instagram\n        const blog = this.props.previewInputs.blog\n        const github = this.props.previewInputs.github\n        const color = this.props.previewInputs.color\n        const background = this.props.previewInputs.background\n        const backgroundImage = this.props.previewInputs.backgroundImage\n        const font = this.props.previewInputs.font\n\n        const previewStyle = {\n            width: \"90%\",\n            height: \"60%\",\n            backgroundImage: `url(${backgroundImage})`,\n            background: `${background}`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center',\n            font: `${font}`\n        }\n        // if empty give hidden\n\n        \n        return(\n            \n            <div className=\"previewSitePage\">\n                <h1>What do you think?</h1>\n                <div className=\"wrapper previewViewPort\" style={previewStyle}>\n                    <div className=\"decorativeBackSplash\">\n                        <h2>Hello I'm {firstName} {lastName}!</h2>\n                        <h3>My website is comming soon!</h3>\n                        <h4>{subtitle}</h4>\n                        <ul>\n                            <li className= {`${this.state.hiddenClass}`}>\n                                <a href={`https://twitter.com/${twitter}`}>\n                                    <i className=\"fab fa-twitter\"></i>\n                                </a>\n                            </li>\n                            <li>\n                                <a href={`https://www.linkedin.com/in/${linkedIn}`}>\n                                    <i className=\"fab fa-linkedin-in\"></i>\n                                </a>\n                            </li>\n                            <li>\n                                <a href={`https://www.instagram.com/${instagram}`}>\n                                    <i className=\"fab fa-instagram\"></i>\n                                </a>\n                            </li>\n                            <li>\n                                <a href={`https://github.com/${github}`}>\n                                    <i className=\"fab fa-github\"></i>\n                                </a>\n                            </li>\n                            <li >\n                                <a href={`${blog}`}>\n                                    <i className=\"fab fa-blogger-b\"></i>\n                                </a>\n                            </li>\n                            <li>\n                                <a href={`${email}`}>\n                                    <i className=\"fab fa-envelope\"></i>\n                                </a>\n                            </li>\n\n\n\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"buttonDiv\">\n                    <button className=\"back\">Back</button>\n                    <button className=\"next\">Next</button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n\nexport default Preview","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass PasteCode extends Component {\n    constructor(props){\n        super(props)\n        console.log(props)\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            colorChoice: \"\",\n            notsure: \"\"\n        }\n\n        // Handles Click buttons on the bottom to refer to the right element\n        this.htmlText = {};\n        this.handleClickHTML = this.selectHTML.bind(this);\n        this.cssText = {};\n        this.handleClickCSS = this.selectCSS.bind(this);\n    }\n    \n    // selects the value within textarea for HTML\n    selectHTML=() => { \n        this.htmlText.select();\n        console.log(\"clicked\")\n    }\n    // selects the value within textarea for CSS\n    selectCSS=() => {\n        this.cssText.select();\n        console.log(\"Clicked CSS\")\n    }\n\n  render() {\n        return (\n            <div className=\"CopyPasteWrapper\">\n                <div className=\"CopyPasteContainer\">\n                    <h2 tabIndex=\"0\" className=\"CopyPasteTitle\">Ok, all set! <span>Feel free to copy the code</span></h2>\n                    <div className=\"CopyPasteEach\">\n                        <h4 tabIndex=\"0\" id=\"copyHTML\" className=\"CopyPasteType\">HTML</h4>\n                        <textarea rows=\"6\" ref={(htmlText) => this.htmlText = htmlText} readOnly value=\n                            {`<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Incoming New Developer!</title>\n    <script src=\"https://kit.fontawesome.com/c6324a7f25.js\" crossorigin=\"anonymous\"></script>\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <!--  INSERT GOOGLE FONT SELECTION -->\n</head>\n<body>\n    <header>\n        <div class=\"wrapper\">\n            <h1>INPUT RANDOM NAME's MAJESTIC WEBSITE IS COMING SOON!</h1>\n            <h2>Stay Tuned...</h2>\n            <h3>Meanwhile let's connect!</h3>\n            <ul>\n                <li>\n                    <a href=\"\"><i class=\"fab fa-twitter\"></i></a>\n                </li>\n                <li>\n                    <a href=\"\"><i class=\"fab fa-linkedin-in\"></i></a>\n                </li>\n                <li>\n                    <a href=\"\"><i class=\"fab fa-instagram\"></i></a>\n                </li>\n            </ul>\n        </div>\n    </header>\n</body>\n</html>`}>\n                        </textarea>\n                    </div>\n                    <div className=\"CopyPasteEach\">\n                        <h4 tabIndex=\"0\" className=\"CopyPasteType\">CSS</h4>\n                        <form>\n                            <textarea rows=\"6\" ref={(cssText) => this.cssText = cssText} readOnly value=\n                                {`a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}\n\n.clearfix:after {visibility: hidden; display: block; font-size: 0; content: ''; clear: both; height: 0; }\n\n* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }\n\n.visuallyHidden:not(:focus):not(:active) { position: absolute; width: 1px; height: 1px; margin: -1px;border: 0;padding: 0;white-space: nowrap;clip-path: inset(100%);clip: rect(00 0 0);overflow: hidden;}\n\n.name {\n    background-color:white;\n}`}>\n                            </textarea>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"bottomNav\">\n                    <button>Back</button>\n                    {/* <Link to='/options'>Continue to Contact</Link> */}\n                    <button onClick={this.handleClickHTML}>Save HTML</button>\n                    <button onClick={this.handleClickCSS}>Save CSS</button>\n                    {/*  PSEUDO CODE======== Copy or Save the code */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PasteCode;","import React, { Component } from 'react';\nimport './About.css'\n\nclass About extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n                firstName: \"\",\n                lastName: \"\",\n                subtitle: \"\",\n                email: \"\",\n                linkedIn: \"\",\n                twitter: \"\",\n                blog: \"\",\n                other: \"\",\n        }\n    }\n\n    onSubmit = (event) => {\n        //prevent default page refresh\n        event.preventDefault();\n        console.log(\"you submitted!\")\n        \n        //emptying states after submission and other code is done using them (so it doesn't sit in form boxes)\n        this.setState({\n            firstName: \"\",\n            lastName: \"\",\n            subtitle: \"\",\n            email: \"\",\n            linkedIn: \"\",\n            twitter: \"\",\n            blog: \"\",\n            other: \"\",\n        })\n    }\n\n\n    //below is to test simplified data collection. By setting nam in an array we can take the val of any input. Saving that to a unique state is the part I so far can't figure out.\n    handleOnChange = (event) => {\n        // console.log(event.target.value);\n        // setting the name and val to their own variables allows us to set them to their own states without having to write multiple setStates for each form input.\n        let inputName = event.target.name\n        let val = event.target.value\n        this.setState({\n            [inputName]: val\n        })\n        this.props.formInputs(this.state)\n    }\n\n    render() {\n        return (\n            <div className=\"innerFormContainer formWrapper about\">\n                <h1>Hello! Please tell us a little about yourself.</h1>\n                <form action=\"\" onSubmit={this.onSubmit}>\n\n                    <fieldset className=\"firstLastName\">\n                        <div className=\"firstNameDiv\">\n                        <label htmlFor=\"firstName:\">First name:</label>\n                        <input type=\"text\" value={this.state.firstName} onChange={this.handleOnChange} name=\"firstName\" />\n                        </div>\n                        <div className=\"lastNameDiv\">\n                        <label htmlFor=\"lastName:\">Last name:</label>\n                        <input type=\"text\" value={this.state.lastName} onChange={this.handleOnChange} name=\"lastName\" />\n                        </div>\n                    </fieldset>\n\n                    <fieldset className=\"subtitle\">\n                        <label htmlFor=\"subtitle\">Subtitle:</label>\n                        <input type=\"text\" value={this.state.subtitle} onChange={this.handleOnChange} name=\"subtitle\" />\n                    </fieldset>\n\n                    <fieldset className=\"email\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" value={this.state.email} onChange={this.handleOnChange} name=\"email\" />\n                    </fieldset>\n\n                    <fieldset className=\"socialMedia\">\n                        <div>\n                        <label htmlFor=\"linkedIn\">LinkedIn</label>\n                        <input type=\"text\" value={this.state.linkedIn} onChange={this.handleOnChange} name=\"linkedIn\" />\n                        </div>\n\n                        <div>\n                        <label htmlFor=\"twitter\">Twitter:</label>\n                        <input type=\"text\" value={this.state.twitter} onChange={this.handleOnChange} name=\"twitter\" />\n                        </div>\n\n                        <div>\n                        <label htmlFor=\"blog\">GitHub:</label>\n                        <input type=\"text\" value={this.state.blog} onChange={this.handleOnChange} name=\"blog\" />\n                        </div>\n\n                    </fieldset>\n                    <fieldset className=\"socialMediaTwo\">\n                        <div>\n                            <label htmlFor=\"other\">Blog (full link):</label>\n                            <input type=\"text\" value={this.state.other} onChange={this.handleOnChange} name=\"other\" />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"other\">Other (full link):</label>\n                            <input type=\"text\" value={this.state.other} onChange={this.handleOnChange} name=\"other\" />\n                        </div>\n\n                    </fieldset>\n                    {/* Previous needs to go back, need to figure out how to override form submit */}\n                    <div className=\"buttonDiv\">\n\n                    {/* <button className=\"next\">Next</button> */}\n                    <input type=\"submit\" hidden />\n                    </div>\n\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './StyleOptions.css'\n\n//hiding api hehehehe\nconst API_KEY = process.env.REACT_APP_UNSPLASH_API_KEY;\n\nexport class StyleOptions extends Component {\n    constructor() {\n        super()\n        this.state = {\n            // this is our user's color selection\n            color: '',\n            //don't pass this prop, just to store options for user to pick from\n            background: [],\n            // id of selected background goes here\n            backgroundSelected: '',\n            font: ''\n        };\n        //this is to make call b functions work\n        this.handleChangeColor = this.handleChangeColor.bind(this);\n        this.handleChangeFont = this.handleChangeFont.bind(this);\n        this.handleImageClick = this.handleImageClick.bind(this);\n        this.handleResetClick = this.handleResetClick.bind(this);\n    }\n    \n    bringImages(query, page) {\n        axios({\n            method: 'GET',\n            url: API_KEY,\n            params: {\n                client_id: \"xKKGmMg-rkh2jY_YtDnKWrhn7OirQxRuhXHueyywbdw\",\n                query: 'landing-page-background',\n                color: `${query}`\n            }\n        }).then((res) => {\n            console.log(res.data.results)\n            this.setState({\n                background: res.data.results\n            });\n        })\n    }\n\n    \n    //on change we are getting options value which matched with API param colour\n    handleChangeColor = (event) => {\n        event.preventDefault();\n        const usersColor = event.target.value;\n        \n        //saving to state\n        this.setState({\n            color: usersColor,\n            background: this.state.background,\n            backgroundSelected: this.state.backgroundSelected,\n            font: this.state.font\n        })\n\n        //passing color and page# to bringImages\n        this.bringImages(usersColor);\n\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\n        setTimeout(() => {\n            this.propPasser()\n        }, 250)\n\n    }\n\n    handleChangeFont = (event) => {\n        event.preventDefault();\n\n        this.setState({\n            color: this.state.color,\n            background: this.state.background,\n            backgroundSelected: this.state.backgroundSelected,\n            font: event.target.value\n        })\n\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\n        setTimeout(() => {\n            this.propPasser()            \n        }, 250)\n    }\n    \n    handleImageClick = (event) => {\n        event.preventDefault();\n        this.setState({\n            color: this.state.color,\n            background: this.state.background,\n            backgroundSelected: event.target.src,\n            font: this.state.backgroundSelected\n        })\n\n        // using a timeout function to run function as it runs before the state is set causing issues passing props to Form.js\n        setTimeout(() => {\n            this.propPasser()\n        }, 250)\n    }\n\n    handleResetClick = (event) => {\n        event.preventDefault();\n\n        //reseting form\n        document.getElementById('stylesForm').reset();\n        //clear state\n        this.setState({\n            color: '',\n            background: [],\n            backgroundSelected: '',\n            font: ''\n        })\n    }\n\n    // put it into it's own function so I can delay it.\n    propPasser = () => {\n        this.props.styleInputs(this.state)\n    }\n\n\n\n    render() {\n        return (\n            <div style={style} className=\"innerFormContainer\">\n                <h1>STYLE OPTIONS</h1>\n\n                {/* this is option for for our font selection */}\n\n                {/* first five fonts from this article\n                https://www.awwwards.com/20-best-web-fonts-from-google-web-fonts-and-font-face.html*/}\n                <form action=\"\" id=\"stylesForm\">\n                    <label htmlFor=\"fonts\">Select your font</label>\n                    {/* listen for changes */}\n                    <select \n                        onChange={this.handleChangeFont} \n                        name=\"fonts\" \n                        id=\"\"\n                    >\n                        <option defaultChecked=\"checked\" value=\"empty\"></option>\n                        <option value=\"alegreya\">Algreya</option>\n                        <option value=\"B612\">B612</option>\n                        <option value=\"muli\">Muli</option>\n                        <option value=\"titillium\">Titillium Web</option>\n                        <option value=\"varela\">Varela</ option>\n                    </select>\n\n                    <label htmlFor=\"chooseColor\">Select your color</label>\n                    {/* every time user passes changes handleChange function activates */}\n                    <select \n                        onChange={this.handleChangeColor} \n                        name=\"color\" \n                        id=\"color\"\n                    >\n                        <option value=\"empty\"></option>\n                        {/* values are equal to api documentation, so don't change them */}\n                        <option value=\"black_and_white\">Black and White</option>\n                        <option value=\"black\">Black</option>\n                        <option value=\"white\">White</option>\n                        <option value=\"yellow\">Yellow</option>\n                        <option value=\"orange\">Orange</option>\n                        <option value=\"red\">Red</option>\n                        <option value=\"purple\">Purple</option>\n                        <option value=\"magenta\">Magenta</option>\n                        <option value=\"green\">Green</option>\n                        <option value=\"teal\">Teal</option>\n                        <option value=\"blue\">Blue</option>\n                    </select>\n                    \n\n                    {/* reset button */}\n                    <button className=\"reset\" onClick={this.handleResetClick} type=\"reset\">RESET</button>\n                    {/* <input onClick={this.handleResetClick} type=\"reset\" value=\"Reset\"/> */}\n                </form>\n\n                <div>\n                    {this.state.background.map((image) => {\n                        return(\n                            // there are bunch of other options to select\n                            < img\n                                onClick={this.handleImageClick} \n                                key={`${image.id}`} \n                                id={`${image.id}`}\n                                // instead of small can also use small, raw, regular, thumb\n                                src = {`${image.urls.full}`} \n                                alt={`${image.alt_description}`}\n                            />\n                        )\n                    })}\n                </div>\n                <div className=\"buttonDiv\">\n                    <button className=\"back\">Back</button>\n                    <button className=\"next\">Next</button>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n//temprorary style\nconst style = {\n    backgroundColor: '#E7605C'\n}\n\nexport default StyleOptions\n","import React, { Component } from 'react';\n\nimport Preview from './Preview.js'\nimport PasteCode from '../PasteCode'\nimport About from \"../../About\";\nimport StyleOptions from \"../../StyleOptions.js\"\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass Form extends Component {\n\n  constructor() {\n    super();\n    //create some state in Form.js for all form inputs so they can be used across forms\n    this.state = {\n      //About params\n      firstName: \"\",\n      lastName: \"\",\n      subtitle: \"\",\n      email: \"\",\n      linkedIn: \"\",\n      twitter: \"\",\n      github: \"\",\n      blog: \"\",\n      other: \"\",\n      // StyleOptions params\n      color: '',\n      font: '',\n      background: [],\n      backgroundSelected: ''\n    }\n  }\n\n  //listen for a click on back button\n  handleBackButton = () => {\n    //this location is specific object property which comes with Router we imported\n    //it tel us which page user on right now\n    //pathname return path we created\n    let page = window.location.pathname\n\n    console.log(window.location)\n    // console.log(page)\n\n    let backTo = '';\n\n    if (page === '/about') {\n      return backTo = '/codeCopy'\n    } else if (page === '/styles') {\n      return backTo = '/about'\n    } else if (page === '/preview') {\n      return backTo = '/styles'\n    } else if (page === '/codeCopy') {\n      return backTo = '/preview'\n    } else {\n      return backTo = '/codeCopy'\n      // on load opens 'home page', so at least we can move back to last page\n    }\n  }\n\n  handleNextButton = () => {\n    //this location is specific object property which comes with Router we imported\n    //it tel us which page user on right now\n    //pathname return path we created\n    let page = window.location.pathname\n\n    // console.log(page)\n\n    let nextTo = '';\n    //back button on about back doesn't return anythig so don't click it until you add more\n    if (page === '/about') {\n      return nextTo = '/styles'\n    } else if (page === '/styles') {\n      return nextTo = '/preview'\n    } else if (page === '/preview') {\n      return nextTo = '/codeCopy'\n    } else if (page === '/codeCopy') {\n      return nextTo = '/about'\n    } else {\n      return nextTo = '/about'\n      // on load opens 'home page', so at least we can move forward to first page\n    }\n  }\n\n  // create handler functions (handle on change) inside Form to update those pieces of state\n  // pass those functions as props to the class components\n  // inside class component, on input change, call those props\n  formParamInputs = (param) => {\n    console.log(param)\n    for (let [key, value] of Object.entries(param)) {\n      this.setState({\n        [key]: value,\n\n      })\n    }\n  }\n\n  styleParamInputs = (param) => {\n    console.log(param);\n    for (let [key, value] of Object.entries(param)) {\n      this.setState({\n        [key]: value,\n      })\n    }\n  }\n\n\n  render() {\n    // console.log(this.props)\n    return (\n      <Router>\n        <div className=\"formContainer\">\n          <h2>This is a Form</h2>\n          {/* <About /> */}\n          <nav>\n            <Link to={this.handleBackButton}>Back</Link>\n            {/* Piece of state to  */}\n            {/* create an array to store the steps and use said array plus the value in state to determine where we are in the flow. */}\n            <Link to={this.handleNextButton}>Next</Link>\n            {/* <Link to=\"/codeCopy\">Next</Link> */}\n          </nav>\n          <Route exact path=\"/about\" render={(props) => <About formInputs={this.formParamInputs} {...props} />} />\n\n          <Route path=\"/styles\" render={(props) => <StyleOptions styleInputs={this.styleParamInputs} {...props} />} />\n\n          <Route path=\"/preview\" render={(props) => <Preview previewInputs={this.stateSomeFunction} {...props} />} />\n\n          <Route path=\"/codeCopy\" render={(props) => <PasteCode formInputs={this.state} {...props} />} />\n        </div>\n\n\n      </Router>\n    )\n  }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport Header from './components/header/Header.js'\nimport Footer from './components/footer/Footer.js'\nimport Form from './components/form/Form.js'\nimport './App.css';\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"mainContent wrapper\">\n        <div className=\"mainGrid\">\n        <Header />\n\n        <Form />\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}